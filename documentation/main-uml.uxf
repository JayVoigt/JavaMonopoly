<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1330</x>
      <y>320</y>
      <w>500</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>style=wordwrap
Board
--
+ spaces: List&lt;Space&gt;
+ players: List&lt;Player&gt;

+ chanceCards: List&lt;DrawCard&gt;
+ communityChestCards: List&lt;DrawCard&gt;

- currentPlayerID: int
- bankHouseCount: int
- bankHotelCount: int
--
&lt;&lt;Constructor&gt;&gt; Board()

- parseIntHandler(String inputString): int

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2120</x>
      <y>460</y>
      <w>540</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Abstract&gt;&gt;
Space
--
- id: int
- friendlyName: String
- spaceType: enum spaceTypeKeys
--
&lt;&lt;Constructor&gt;&gt; Space(int inputID, spaceTypeKeys inputSpaceType, String inputFriendlyName)

style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2120</x>
      <y>670</y>
      <w>550</w>
      <h>350</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Abstract&gt;&gt;
Property
--
- propertyType: propertyTypeKeys
- isOwned: boolean
- isMortgaged: boolean
- isFullSetOwned: boolean
- ownerID: int

- rentBase: int
- rentHouse&lt;1-4&gt;: int
- rentHotel: int

- purchaseCost: int
- mortgageValue: int
- houseCost: int
- hotelCost: int
--
&lt;&lt;Constructor&gt;&gt; Property(Map&lt;String, Integer&gt; propertyAttributes)

/+ abstract calculateRent(): int/

style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2380</x>
      <y>600</y>
      <w>90</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
extends</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2190</x>
      <y>1080</y>
      <w>380</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>Color
--
- colorGroup: enum colorGroupKeys
- houseCount: int
- hotelCount: int
--
&lt;&lt;Constructor&gt;&gt; Color(Map&lt;String, Integer&gt; propertyAttributes, int inputSpaceID, String inputFriendlyName)

+ calculateRent(): int

style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2370</x>
      <y>1010</y>
      <w>90</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
extends</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2590</x>
      <y>1080</y>
      <w>330</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>Utility
--
&lt;&lt;Constructor&gt;&gt; Utility(Map&lt;String, Integer&gt; propertyAttributes, int inputSpaceID, String inputFriendlyName)

+ calculateRent(): int

style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2570</x>
      <y>1010</y>
      <w>230</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
extends</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0;210.0;40.0;210.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1780</x>
      <y>1080</y>
      <w>390</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>Railroad
--
&lt;&lt;Constructor&gt;&gt; Railroad(Map&lt;String, Integer&gt; propertyAttributes, int inputSpaceID, String inputFriendlyName)

+ calculateRent(): int

style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1960</x>
      <y>1010</y>
      <w>260</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
extends</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;40.0;240.0;40.0;240.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1820</x>
      <y>480</y>
      <w>320</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m2=40</panel_attributes>
    <additional_attributes>10.0;10.0;300.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>270</x>
      <y>320</y>
      <w>500</w>
      <h>470</h>
    </coordinates>
    <panel_attributes>Player
--
- playerID: int
- customName: String
- currentBalance: int
- currentPosition: int

- isPlayerActive: boolean
- isComputerControlled: boolean

- consecutiveDoublesCount: int
- consecutiveTurnsJailed: int

- ownedPropertyIDs[]: boolean[40]
- mortgagedPropertyIDs[]: boolean[40]

- die1: int
- die2: int

- getOutOfJailFreeCardCount: int
--
&lt;&lt;Constructor&gt;&gt; Player()

+ initializePlayerForNewTurn(): void
+ advancePosition(int spacesCount): boolean
+ setPosition(int spaceID): void
+ rollDice(): int
+ unjailPlayer(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>760</x>
      <y>470</y>
      <w>590</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m2=5
fg=red</panel_attributes>
    <additional_attributes>570.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>270</x>
      <y>830</y>
      <w>500</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>MainView
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>920</x>
      <y>680</y>
      <w>770</w>
      <h>710</h>
    </coordinates>
    <panel_attributes>style=wordwrap
GameLogicController
--
- board: Board

- currentPlayer: Player
- currentSpace: Space
- currentGameEvent: GameEvent
- currentProperty: Property
- currentDrawCard: DrawCard

- gameLogContents: String
- debugLogContents: String

- isGameActive: boolean

- playersCount: int
- turnCounter: int

- playerCanBuildImprovements: boolean
--
&lt;&lt;Constructor&gt;&gt; GameLogicController(Board inputBoard)

+ initialEvaluator(): void
+ diceRollManager(): void
+ endTurnManager(): void
+ playerDecisionPurchaseProperty(): void
+ playerDecisionAuction(): void
+ playerDecisionJailPostBail(): void
+ playerDecisionJailRollDoubles(): void
+ forfeitManager(): void

- jailStateEvaluator(): void
- normalTurnEvaluator(): void
- maeStateEvaluator(): void
- propertyPurchaseManager(): void
- jailPlayer(): void
- movementEvaluator(): void
- movementEvaluatorAdvanced(boolean collectGoBonus, int movementQuantity): void
- gameEventEvaluator(): void
- drawCardEvaluator(): void
- propertyEvaluator(): void
- readyPlayerForJailRelease(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1330</x>
      <y>0</y>
      <w>310</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>JavaMonopoly
--
- board: Board
- view: MainWindow
--
&lt;&lt;Constructor&gt;&gt; JavaMonopoly()

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1420</x>
      <y>190</y>
      <w>30</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>980</x>
      <y>290</y>
      <w>200</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>style=wordwrap
*Board*
includes 5 Players, such that they can be accessed with 1-indexed values.

Player 0 is not a usable player.
bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1100</x>
      <y>440</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=.
fg=red</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1560</x>
      <y>580</y>
      <w>30</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1400</x>
      <y>580</y>
      <w>110</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
can access</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2760</x>
      <y>460</y>
      <w>420</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>style=wordwrap
GameEvent
--
- gameEventType: enum gameEventTypeKeys
--
&lt;&lt;Constructor&gt;&gt; GameEvent(gameEventTypeKeys inputGameEventType, int inputSpaceID, String inputFriendlyName)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2650</x>
      <y>500</y>
      <w>130</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
extends</panel_attributes>
    <additional_attributes>10.0;20.0;110.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>760</x>
      <y>870</y>
      <w>180</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
can access</panel_attributes>
    <additional_attributes>160.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>0</x>
      <y>830</y>
      <w>230</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>style=wordwrap
*MainView*
contains all logic for displaying the GUI, as well as for sending commands to GameLogicController.
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>220</x>
      <y>900</y>
      <w>70</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1090</x>
      <y>500</y>
      <w>200</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>style=wordwrap
*GameLogicController*
can access the Board object. Consequently, this includes access to all Space and Player objects within their respective ArrayLists.
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1280</x>
      <y>610</y>
      <w>150</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;130.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>760</x>
      <y>130</y>
      <w>590</w>
      <h>740</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>570.0;10.0;60.0;10.0;60.0;720.0;10.0;720.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1690</x>
      <y>0</y>
      <w>200</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>style=wordwrap
bg=yellow
*JavaMonopoly*
serves as the "orchestration" class for the program - it contains the main method which then constructs an instance of itself.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1630</x>
      <y>40</y>
      <w>80</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>0</x>
      <y>320</y>
      <w>230</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>style=wordwrap
bg=yellow
*Player*
contains all data and methods used to determine and control the state for a particular player.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>220</x>
      <y>370</y>
      <w>70</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2210</x>
      <y>110</y>
      <w>570</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>style=wordwrap
DrawCard
--
- drawCardType: enum drawCardTypeKeys
- destinationRelativeType: enum destinationRelativeTypeKeys

- message: String
- destinationSpaceID: int
- movementQantity: int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1820</x>
      <y>330</y>
      <w>410</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m2=16
fg=red</panel_attributes>
    <additional_attributes>10.0;10.0;390.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1820</x>
      <y>360</y>
      <w>410</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m2=16
fg=red</panel_attributes>
    <additional_attributes>10.0;10.0;390.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1930</x>
      <y>90</y>
      <w>250</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>style=wordwrap
*DrawCard*
contains information about a particular event that may trigger when a Chance or Community Chest card is drawn.

It is aggregated into two groups of 16, where the members of each group represent a single possible card.
bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2100</x>
      <y>300</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=.
fg=red</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2080</x>
      <y>300</y>
      <w>50</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=.
fg=red</panel_attributes>
    <additional_attributes>30.0;10.0;10.0;10.0;10.0;70.0</additional_attributes>
  </element>
</diagram>
