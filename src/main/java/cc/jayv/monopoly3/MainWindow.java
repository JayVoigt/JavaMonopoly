package cc.jayv.monopoly3;


import java.awt.*;
import java.awt.event.*;
import java.io.BufferedWriter;
import java.io.IOException;
import javax.swing.UIManager;
import java.util.Date;
import javax.swing.*;
import java.util.*;
import java.lang.reflect.*;
import java.lang.String;
import java.io.File;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import com.formdev.flatlaf.*;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.Serializable;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author jay
 */
public class MainWindow extends javax.swing.JFrame implements WindowListener, ActionListener, Serializable {
	
	Board board;
	Font font;
	GameLogicController controller;
	
	ArrayList<JButton> spaceButtons;
	ArrayList<javax.swing.ImageIcon> diceIcons;
	ArrayList<JDialog> jDialogs;
	ArrayList<JLabel> labelGroupSpaceSelection;
	
	ArrayList<Icon> improvementIconsNorth = new ArrayList<>();
	ArrayList<Icon> improvementIconsEast = new ArrayList<>();
	ArrayList<Icon> improvementIconsSouth = new ArrayList<>();
	ArrayList<Icon> improvementIconsWest = new ArrayList<>();

	
	public javax.swing.JLabel labelBoardImage;
	
	Player currentPlayer;
	Player gameEditorPlayer;
	
	int iconSelectionPlayerID;
	int currentSpaceSelectionID;
	
	ArrayList<String> gameLogContents;
	ArrayList<String> gameLogContentsFiltered;
	
	public MainWindow(Board inputBoard) throws IOException {
		try {
			UIManager.setLookAndFeel(new FlatLightLaf());
			//UIManager.setLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel");
		} catch (Exception e) {
		}
		initComponents();
		
		jDialogs = new ArrayList<>();
		
		board = inputBoard;
		controller = new GameLogicController(board);
		
		gameLogContents = new ArrayList<>();
		gameLogContentsFiltered = new ArrayList<>();
		
		customInitComponents();
		
		gameEditorPlayer = board.players.get(1);
		
		initButtonAppearance();
		
		controller.sendWelcomeMessage();
		update();
		lockEndTurn();
		lockRollDice();
		
		addBoardBackground();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gameSetupDialog = new javax.swing.JDialog();
        buttonStartGame = new javax.swing.JButton();
        comboBoxPlayersCount = new javax.swing.JComboBox<>();
        staticLabelPlayersCount = new javax.swing.JLabel();
        staticLabelPlayersCount2 = new javax.swing.JLabel();
        staticLabelPlayersCount1 = new javax.swing.JLabel();
        spinnerStartingBalance = new javax.swing.JSpinner();
        textFieldPlayer1Name = new javax.swing.JTextField();
        staticLabelPlayer1Name = new javax.swing.JLabel();
        staticLabelPlayerIcon = new javax.swing.JLabel();
        textFieldPlayer2Name = new javax.swing.JTextField();
        textFieldPlayer3Name = new javax.swing.JTextField();
        textFieldPlayer4Name = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        checkBoxPlayer2ComputerControlled = new javax.swing.JCheckBox();
        checkBoxPlayer1ComputerControlled = new javax.swing.JCheckBox();
        checkBoxPlayer3ComputerControlled = new javax.swing.JCheckBox();
        checkBoxPlayer4ComputerControlled = new javax.swing.JCheckBox();
        buttonPlayer1Icon = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        buttonPlayer2Icon = new javax.swing.JButton();
        buttonPlayer3Icon = new javax.swing.JButton();
        buttonPlayer4Icon = new javax.swing.JButton();
        gameEditorDialog = new javax.swing.JDialog();
        comboBoxPlayerSelection = new javax.swing.JComboBox<>();
        staticLabelPlayerSelection = new javax.swing.JLabel();
        staticLabelPlayerSelection1 = new javax.swing.JLabel();
        buttonGameEditorUpdate = new javax.swing.JButton();
        buttonGameEditorClose = new javax.swing.JButton();
        buttonGameEditorGoBackSpace = new javax.swing.JButton();
        buttonGameEditorUnlockEndTurn = new javax.swing.JButton();
        buttonGameEditorUnlockRollDice1 = new javax.swing.JButton();
        buttonGameEditorAdvanceSpace = new javax.swing.JButton();
        buttonGive1000 = new javax.swing.JButton();
        buttonDeduct1000 = new javax.swing.JButton();
        buttonReleasePlayer = new javax.swing.JButton();
        buttonJailPlayer = new javax.swing.JButton();
        buttonGameEditorGiveAllProperties = new javax.swing.JButton();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        saveFileChoserPanel = new javax.swing.JPanel();
        saveFileChooser = new javax.swing.JFileChooser();
        openFileChooserPanel = new javax.swing.JPanel();
        openFileChooser = new javax.swing.JFileChooser();
        debugLogFrame = new javax.swing.JFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaDebugLog = new javax.swing.JTextArea();
        debugToolsDialog = new javax.swing.JDialog();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        askPropertyDecisionDialog = new javax.swing.JDialog();
        buttonPropertyDecisionPurchase = new javax.swing.JButton();
        buttonPropertyDecisionAuction = new javax.swing.JButton();
        staticLabelPropertyDecision = new javax.swing.JLabel();
        labelPropertyName = new javax.swing.JLabel();
        labelCost = new javax.swing.JLabel();
        aboutPaneOld = new javax.swing.JFrame();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        improvementsDialog = new javax.swing.JDialog();
        staticLabelImprovementsTitle = new javax.swing.JLabel();
        labelSelectedProperty = new javax.swing.JLabel();
        buttonSellHouse = new javax.swing.JButton();
        buttonBuildHouse = new javax.swing.JButton();
        buttonBuildHotel = new javax.swing.JButton();
        buttonSellHotel = new javax.swing.JButton();
        jSeparator9 = new javax.swing.JSeparator();
        labelImprovementInfo = new javax.swing.JLabel();
        statisticsDialog = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        statsTable = new javax.swing.JTable();
        jailDialog = new javax.swing.JDialog();
        staticLabelJailTitle = new javax.swing.JLabel();
        buttonJailDialogPostBail = new javax.swing.JButton();
        buttonJailDialogRollForDoubles = new javax.swing.JButton();
        labelConsecutiveJailedTurns = new javax.swing.JLabel();
        labelConsecutiveJailedTurns1 = new javax.swing.JLabel();
        buttonJailDialogUseGOOJFC = new javax.swing.JButton();
        playerIconSelector = new javax.swing.JDialog();
        buttonIcon1 = new javax.swing.JButton();
        buttonIcon2 = new javax.swing.JButton();
        buttonIcon3 = new javax.swing.JButton();
        buttonIcon4 = new javax.swing.JButton();
        buttonIcon5 = new javax.swing.JButton();
        buttonIcon6 = new javax.swing.JButton();
        buttonIcon7 = new javax.swing.JButton();
        buttonIcon8 = new javax.swing.JButton();
        buttonIcon9 = new javax.swing.JButton();
        mortgageDialog = new javax.swing.JDialog();
        staticLabelMortgage = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        aboutDialog = new javax.swing.JDialog();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        forfeitDialog = new javax.swing.JDialog();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        forfeitDialogButtonYes = new javax.swing.JButton();
        forfeitDialogButtonNo = new javax.swing.JButton();
        frameBoard = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaGameLog = new javax.swing.JTextArea();
        spaceSelectionInformation = new javax.swing.JPanel();
        labelOwnedBy = new javax.swing.JLabel();
        staticLabelFriendlyName = new javax.swing.JLabel();
        labelFriendlyName = new javax.swing.JLabel();
        staticLabelID = new javax.swing.JLabel();
        staticLabelIsOwned = new javax.swing.JLabel();
        staticLabelSpaceType = new javax.swing.JLabel();
        staticLabelOwnedBy = new javax.swing.JLabel();
        labelIsOwned = new javax.swing.JLabel();
        labelSpaceType = new javax.swing.JLabel();
        labelSpaceSelectionID = new javax.swing.JLabel();
        staticLabelPurchaseCost = new javax.swing.JLabel();
        labelPurchaseCost = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        staticLabelCurrentRent = new javax.swing.JLabel();
        labelCurrentRent = new javax.swing.JLabel();
        staticLabelRentBase1 = new javax.swing.JLabel();
        staticLabelRentBase2 = new javax.swing.JLabel();
        staticLabelRentBase3 = new javax.swing.JLabel();
        staticLabelRentBase4 = new javax.swing.JLabel();
        staticLabelRentBase5 = new javax.swing.JLabel();
        labelRentBase = new javax.swing.JLabel();
        labelRent1House = new javax.swing.JLabel();
        labelRent2Houses = new javax.swing.JLabel();
        labelRent3Houses = new javax.swing.JLabel();
        labelRent4Houses = new javax.swing.JLabel();
        staticLabelTimesLanded = new javax.swing.JLabel();
        labelTimesLanded = new javax.swing.JLabel();
        staticLabelRentBase6 = new javax.swing.JLabel();
        labelRentHotel1 = new javax.swing.JLabel();
        iconPlayer1Position = new javax.swing.JLabel();
        iconPlayer2Position = new javax.swing.JLabel();
        iconPlayer3Position = new javax.swing.JLabel();
        iconPlayer4Position = new javax.swing.JLabel();
        buttonSpace0 = new javax.swing.JButton();
        buttonSpace1 = new javax.swing.JButton();
        buttonSpace2 = new javax.swing.JButton();
        buttonSpace3 = new javax.swing.JButton();
        buttonSpace4 = new javax.swing.JButton();
        buttonSpace5 = new javax.swing.JButton();
        buttonSpace6 = new javax.swing.JButton();
        buttonSpace7 = new javax.swing.JButton();
        buttonSpace8 = new javax.swing.JButton();
        buttonSpace9 = new javax.swing.JButton();
        buttonSpace10 = new javax.swing.JButton();
        buttonSpace11 = new javax.swing.JButton();
        buttonSpace12 = new javax.swing.JButton();
        buttonSpace13 = new javax.swing.JButton();
        buttonSpace14 = new javax.swing.JButton();
        buttonSpace15 = new javax.swing.JButton();
        buttonSpace16 = new javax.swing.JButton();
        buttonSpace17 = new javax.swing.JButton();
        buttonSpace18 = new javax.swing.JButton();
        buttonSpace19 = new javax.swing.JButton();
        buttonSpace20 = new javax.swing.JButton();
        buttonSpace21 = new javax.swing.JButton();
        buttonSpace22 = new javax.swing.JButton();
        buttonSpace23 = new javax.swing.JButton();
        buttonSpace24 = new javax.swing.JButton();
        buttonSpace25 = new javax.swing.JButton();
        buttonSpace26 = new javax.swing.JButton();
        buttonSpace27 = new javax.swing.JButton();
        buttonSpace28 = new javax.swing.JButton();
        buttonSpace29 = new javax.swing.JButton();
        buttonSpace30 = new javax.swing.JButton();
        buttonSpace31 = new javax.swing.JButton();
        buttonSpace32 = new javax.swing.JButton();
        buttonSpace33 = new javax.swing.JButton();
        buttonSpace34 = new javax.swing.JButton();
        buttonSpace35 = new javax.swing.JButton();
        buttonSpace36 = new javax.swing.JButton();
        buttonSpace37 = new javax.swing.JButton();
        buttonSpace38 = new javax.swing.JButton();
        buttonSpace39 = new javax.swing.JButton();
        staticLabelSearchGameLog = new javax.swing.JLabel();
        formattedTextFieldGameLogSearch = new javax.swing.JFormattedTextField();
        labelBoardImageReference = new javax.swing.JLabel();
        controlPanelGameInformation = new javax.swing.JInternalFrame();
        labelPlayer1Name = new javax.swing.JLabel();
        labelPlayer2Name = new javax.swing.JLabel();
        labelPlayer3Name = new javax.swing.JLabel();
        labelPlayer4Name = new javax.swing.JLabel();
        labelPlayer1ActiveIcon = new javax.swing.JLabel();
        controlPanelActions = new javax.swing.JInternalFrame();
        buttonEndTurn = new javax.swing.JButton();
        buttonRollDice = new javax.swing.JButton();
        staticLabelCurrentPlayer = new javax.swing.JLabel();
        labelCurrentPlayer = new javax.swing.JLabel();
        labelDie2 = new javax.swing.JLabel();
        labelDie1 = new javax.swing.JLabel();
        staticLabelCurrentBalance = new javax.swing.JLabel();
        labelCurrentBalance = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        staticLabelPosition = new javax.swing.JLabel();
        labelCurrentPosition = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        buttonActionTrade = new javax.swing.JButton();
        buttonActionMortgage = new javax.swing.JButton();
        buttonActionImprovements = new javax.swing.JButton();
        buttonProperties = new javax.swing.JButton();
        buttonActionImprovements1 = new javax.swing.JButton();
        buttonForfeit = new javax.swing.JButton();
        labelCurrentPlayerIcon = new javax.swing.JLabel();
        staticLabelPositionIcon = new javax.swing.JLabel();
        labelCurrentBalanceIcon1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuFileNewGame = new javax.swing.JMenuItem();
        menuFileLoadGame = new javax.swing.JMenuItem();
        menuFileSaveGame = new javax.swing.JMenuItem();
        menuFileQuit = new javax.swing.JMenuItem();
        menuEdit = new javax.swing.JMenu();
        menuEditGameEditor = new javax.swing.JMenuItem();
        menuEditDebugTools = new javax.swing.JMenuItem();
        menuView = new javax.swing.JMenu();
        menuViewCheckBoxShowDebugLog = new javax.swing.JCheckBoxMenuItem();
        menuViewManuallyUpdateView = new javax.swing.JMenuItem();
        menuViewToggleExtraPadding = new javax.swing.JMenuItem();
        menuHelp = new javax.swing.JMenu();
        menuHelpAbout = new javax.swing.JMenuItem();

        gameSetupDialog.setTitle("Game Setup");
        gameSetupDialog.setAlwaysOnTop(true);
        gameSetupDialog.setMinimumSize(new java.awt.Dimension(400, 310));
        gameSetupDialog.setUndecorated(true);

        buttonStartGame.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newgame.png"))); // NOI18N
        buttonStartGame.setText("Start Game");
        buttonStartGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonStartGameActionPerformed(evt);
            }
        });

        comboBoxPlayersCount.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        comboBoxPlayersCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxPlayersCountActionPerformed(evt);
            }
        });
        comboBoxPlayersCount.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                comboBoxPlayersCountPropertyChange(evt);
            }
        });

        staticLabelPlayersCount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player-generic.png"))); // NOI18N
        staticLabelPlayersCount.setText("Number of Players");

        staticLabelPlayersCount2.setFont(new java.awt.Font("Helvetica Neue", 3, 18)); // NOI18N
        staticLabelPlayersCount2.setText("Java Monopoly Prototype");

        staticLabelPlayersCount1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/money.png"))); // NOI18N
        staticLabelPlayersCount1.setText("Starting Balance");

        spinnerStartingBalance.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                spinnerStartingBalancePropertyChange(evt);
            }
        });

        textFieldPlayer1Name.setText("Player 1");
        textFieldPlayer1Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldPlayer1NameActionPerformed(evt);
            }
        });

        staticLabelPlayer1Name.setText("Player Name");

        staticLabelPlayerIcon.setText("Player Icon");

        textFieldPlayer2Name.setText("Player 2");

        textFieldPlayer3Name.setText("Player 3");

        textFieldPlayer4Name.setText("Player 4");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bug-log-anim.gif"))); // NOI18N
        jButton1.setText("debug");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        checkBoxPlayer2ComputerControlled.setText("Computer");
        checkBoxPlayer2ComputerControlled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxPlayer2ComputerControlledActionPerformed(evt);
            }
        });

        checkBoxPlayer1ComputerControlled.setText("Computer");
        checkBoxPlayer1ComputerControlled.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        checkBoxPlayer1ComputerControlled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxPlayer1ComputerControlledActionPerformed(evt);
            }
        });

        checkBoxPlayer3ComputerControlled.setText("Computer");
        checkBoxPlayer3ComputerControlled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxPlayer3ComputerControlledActionPerformed(evt);
            }
        });

        checkBoxPlayer4ComputerControlled.setText("Computer");
        checkBoxPlayer4ComputerControlled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxPlayer4ComputerControlledActionPerformed(evt);
            }
        });

        buttonPlayer1Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player-generic.png"))); // NOI18N
        buttonPlayer1Icon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPlayer1IconActionPerformed(evt);
            }
        });

        buttonPlayer2Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player-generic.png"))); // NOI18N
        buttonPlayer2Icon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPlayer2IconActionPerformed(evt);
            }
        });

        buttonPlayer3Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player-generic.png"))); // NOI18N

        buttonPlayer4Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player-generic.png"))); // NOI18N

        javax.swing.GroupLayout gameSetupDialogLayout = new javax.swing.GroupLayout(gameSetupDialog.getContentPane());
        gameSetupDialog.getContentPane().setLayout(gameSetupDialogLayout);
        gameSetupDialogLayout.setHorizontalGroup(
            gameSetupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameSetupDialogLayout.createSequentialGroup()
                .addGroup(gameSetupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gameSetupDialogLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(gameSetupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonStartGame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gameSetupDialogLayout.createSequentialGroup()
                                .addGroup(gameSetupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textFieldPlayer3Name)
                                    .addComponent(textFieldPlayer4Name))
                                .addGap(6, 6, 6)
                                .addGroup(gameSetupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(buttonPlayer3Icon)
                                    .addComponent(buttonPlayer4Icon, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(gameSetupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkBoxPlayer4ComputerControlled)
                                    .addComponent(checkBoxPlayer3ComputerControlled)))
                            .addGroup(gameSetupDialogLayout.createSequentialGroup()
                                .addComponent(staticLabelPlayersCount1)
                                .addGap(18, 18, 18)
                                .addComponent(spinnerStartingBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(gameSetupDialogLayout.createSequentialGroup()
                                .addComponent(staticLabelPlayersCount2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                                .addComponent(jButton1))))
                    .addGroup(gameSetupDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(staticLabelPlayersCount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxPlayersCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(gameSetupDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1))
                    .addGroup(gameSetupDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(gameSetupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldPlayer1Name)
                            .addGroup(gameSetupDialogLayout.createSequentialGroup()
                                .addComponent(staticLabelPlayer1Name)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(gameSetupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(gameSetupDialogLayout.createSequentialGroup()
                                .addComponent(buttonPlayer1Icon)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(checkBoxPlayer1ComputerControlled))
                            .addComponent(staticLabelPlayerIcon)))
                    .addGroup(gameSetupDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(textFieldPlayer2Name)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonPlayer2Icon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkBoxPlayer2ComputerControlled)))
                .addContainerGap())
        );
        gameSetupDialogLayout.setVerticalGroup(
            gameSetupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gameSetupDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(gameSetupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staticLabelPlayersCount2)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(gameSetupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staticLabelPlayersCount)
                    .addComponent(comboBoxPlayersCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(gameSetupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staticLabelPlayersCount1)
                    .addComponent(spinnerStartingBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(gameSetupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(gameSetupDialogLayout.createSequentialGroup()
                        .addGroup(gameSetupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(gameSetupDialogLayout.createSequentialGroup()
                                .addGroup(gameSetupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(gameSetupDialogLayout.createSequentialGroup()
                                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(gameSetupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(staticLabelPlayer1Name)
                                            .addComponent(staticLabelPlayerIcon))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(gameSetupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(textFieldPlayer1Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(checkBoxPlayer1ComputerControlled)
                                            .addComponent(buttonPlayer1Icon))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(gameSetupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(textFieldPlayer2Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(checkBoxPlayer2ComputerControlled)))
                                    .addComponent(buttonPlayer2Icon))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(gameSetupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(textFieldPlayer3Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkBoxPlayer3ComputerControlled)))
                            .addComponent(buttonPlayer3Icon))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(gameSetupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldPlayer4Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkBoxPlayer4ComputerControlled)))
                    .addComponent(buttonPlayer4Icon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonStartGame, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gameEditorDialog.setBounds(new java.awt.Rectangle(0, 25, 370, 280));
        gameEditorDialog.setMinimumSize(new java.awt.Dimension(370, 280));
        gameEditorDialog.setUndecorated(true);
        gameEditorDialog.setResizable(false);
        gameEditorDialog.setSize(new java.awt.Dimension(380, 280));

        comboBoxPlayerSelection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        comboBoxPlayerSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxPlayerSelectionActionPerformed(evt);
            }
        });
        comboBoxPlayerSelection.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                comboBoxPlayerSelectionPropertyChange(evt);
            }
        });

        staticLabelPlayerSelection.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player-generic.png"))); // NOI18N
        staticLabelPlayerSelection.setText("Select Player");

        staticLabelPlayerSelection1.setFont(new java.awt.Font("Helvetica Neue", 3, 18)); // NOI18N
        staticLabelPlayerSelection1.setForeground(new java.awt.Color(255, 0, 0));
        staticLabelPlayerSelection1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/matrix-anim.gif"))); // NOI18N
        staticLabelPlayerSelection1.setText("Game Editor");

        buttonGameEditorUpdate.setForeground(new java.awt.Color(255, 0, 0));
        buttonGameEditorUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/alert.png"))); // NOI18N
        buttonGameEditorUpdate.setText("Update");
        buttonGameEditorUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGameEditorUpdateActionPerformed(evt);
            }
        });

        buttonGameEditorClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/red-x.png"))); // NOI18N
        buttonGameEditorClose.setText("Close");
        buttonGameEditorClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGameEditorCloseActionPerformed(evt);
            }
        });

        buttonGameEditorGoBackSpace.setIcon(new javax.swing.ImageIcon(getClass().getResource("/position.png"))); // NOI18N
        buttonGameEditorGoBackSpace.setText("Go back a space");
        buttonGameEditorGoBackSpace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGameEditorGoBackSpaceActionPerformed(evt);
            }
        });

        buttonGameEditorUnlockEndTurn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/arrow.png"))); // NOI18N
        buttonGameEditorUnlockEndTurn.setText("Unlock endTurn");
        buttonGameEditorUnlockEndTurn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGameEditorUnlockEndTurnActionPerformed(evt);
            }
        });

        buttonGameEditorUnlockRollDice1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dice-icon.png"))); // NOI18N
        buttonGameEditorUnlockRollDice1.setText("Unlock rollDice");
        buttonGameEditorUnlockRollDice1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGameEditorUnlockRollDice1ActionPerformed(evt);
            }
        });

        buttonGameEditorAdvanceSpace.setIcon(new javax.swing.ImageIcon(getClass().getResource("/position.png"))); // NOI18N
        buttonGameEditorAdvanceSpace.setText("Advance a space");
        buttonGameEditorAdvanceSpace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGameEditorAdvanceSpaceActionPerformed(evt);
            }
        });

        buttonGive1000.setIcon(new javax.swing.ImageIcon(getClass().getResource("/money.png"))); // NOI18N
        buttonGive1000.setText("Give $1000");
        buttonGive1000.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGive1000ActionPerformed(evt);
            }
        });

        buttonDeduct1000.setIcon(new javax.swing.ImageIcon(getClass().getResource("/money.png"))); // NOI18N
        buttonDeduct1000.setText("Deduct $1000");
        buttonDeduct1000.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeduct1000ActionPerformed(evt);
            }
        });

        buttonReleasePlayer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jail.png"))); // NOI18N
        buttonReleasePlayer.setText("Release player");
        buttonReleasePlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonReleasePlayerActionPerformed(evt);
            }
        });

        buttonJailPlayer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jail.png"))); // NOI18N
        buttonJailPlayer.setText("Jail player");
        buttonJailPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonJailPlayerActionPerformed(evt);
            }
        });

        buttonGameEditorGiveAllProperties.setIcon(new javax.swing.ImageIcon(getClass().getResource("/properties.png"))); // NOI18N
        buttonGameEditorGiveAllProperties.setText("Give all properties");
        buttonGameEditorGiveAllProperties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGameEditorGiveAllPropertiesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout gameEditorDialogLayout = new javax.swing.GroupLayout(gameEditorDialog.getContentPane());
        gameEditorDialog.getContentPane().setLayout(gameEditorDialogLayout);
        gameEditorDialogLayout.setHorizontalGroup(
            gameEditorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameEditorDialogLayout.createSequentialGroup()
                .addGroup(gameEditorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gameEditorDialogLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(staticLabelPlayerSelection1))
                    .addGroup(gameEditorDialogLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(staticLabelPlayerSelection)
                        .addGap(12, 12, 12)
                        .addComponent(comboBoxPlayerSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(gameEditorDialogLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(buttonGive1000, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(buttonDeduct1000, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(gameEditorDialogLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(buttonJailPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(buttonReleasePlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(gameEditorDialogLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(buttonGameEditorAdvanceSpace, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(buttonGameEditorGoBackSpace, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(gameEditorDialogLayout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(buttonGameEditorUpdate)
                        .addGap(12, 12, 12)
                        .addComponent(buttonGameEditorClose, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(gameEditorDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(gameEditorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buttonGameEditorGiveAllProperties, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonGameEditorUnlockRollDice1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addComponent(buttonGameEditorUnlockEndTurn, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        gameEditorDialogLayout.setVerticalGroup(
            gameEditorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameEditorDialogLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(staticLabelPlayerSelection1)
                .addGap(15, 15, 15)
                .addGroup(gameEditorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gameEditorDialogLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(staticLabelPlayerSelection))
                    .addComponent(comboBoxPlayerSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(gameEditorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonGive1000)
                    .addComponent(buttonDeduct1000))
                .addGap(6, 6, 6)
                .addGroup(gameEditorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonJailPlayer)
                    .addComponent(buttonReleasePlayer))
                .addGap(6, 6, 6)
                .addGroup(gameEditorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonGameEditorAdvanceSpace)
                    .addComponent(buttonGameEditorGoBackSpace))
                .addGap(5, 5, 5)
                .addGroup(gameEditorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonGameEditorUnlockRollDice1)
                    .addGroup(gameEditorDialogLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(buttonGameEditorUnlockEndTurn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonGameEditorGiveAllProperties)
                .addGap(8, 8, 8)
                .addGroup(gameEditorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonGameEditorUpdate)
                    .addComponent(buttonGameEditorClose)))
        );

        saveFileChoserPanel.setSize(new java.awt.Dimension(534, 338));

        javax.swing.GroupLayout saveFileChoserPanelLayout = new javax.swing.GroupLayout(saveFileChoserPanel);
        saveFileChoserPanel.setLayout(saveFileChoserPanelLayout);
        saveFileChoserPanelLayout.setHorizontalGroup(
            saveFileChoserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, saveFileChoserPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(saveFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        saveFileChoserPanelLayout.setVerticalGroup(
            saveFileChoserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, saveFileChoserPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(saveFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        openFileChooserPanel.setSize(new java.awt.Dimension(534, 338));

        javax.swing.GroupLayout openFileChooserPanelLayout = new javax.swing.GroupLayout(openFileChooserPanel);
        openFileChooserPanel.setLayout(openFileChooserPanelLayout);
        openFileChooserPanelLayout.setHorizontalGroup(
            openFileChooserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, openFileChooserPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(openFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        openFileChooserPanelLayout.setVerticalGroup(
            openFileChooserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, openFileChooserPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(openFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        debugLogFrame.setTitle("Debug Log");
        debugLogFrame.setAlwaysOnTop(true);
        debugLogFrame.setSize(new java.awt.Dimension(800, 400));

        textAreaDebugLog.setEditable(false);
        textAreaDebugLog.setColumns(20);
        textAreaDebugLog.setRows(5);
        jScrollPane2.setViewportView(textAreaDebugLog);

        javax.swing.GroupLayout debugLogFrameLayout = new javax.swing.GroupLayout(debugLogFrame.getContentPane());
        debugLogFrame.getContentPane().setLayout(debugLogFrameLayout);
        debugLogFrameLayout.setHorizontalGroup(
            debugLogFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(debugLogFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
                .addContainerGap())
        );
        debugLogFrameLayout.setVerticalGroup(
            debugLogFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, debugLogFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );

        debugToolsDialog.setAlwaysOnTop(true);
        debugToolsDialog.getContentPane().setLayout(null);

        jButton2.setText("Space Button Highlight");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        debugToolsDialog.getContentPane().add(jButton2);
        jButton2.setBounds(6, 40, 163, 23);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bug.png"))); // NOI18N
        jLabel1.setText("Debug Tools");
        debugToolsDialog.getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 10, 180, 23);

        askPropertyDecisionDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        askPropertyDecisionDialog.setAlwaysOnTop(true);
        askPropertyDecisionDialog.setUndecorated(true);
        askPropertyDecisionDialog.setSize(new java.awt.Dimension(400, 300));

        buttonPropertyDecisionPurchase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/money.png"))); // NOI18N
        buttonPropertyDecisionPurchase.setText("Purchase");
        buttonPropertyDecisionPurchase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPropertyDecisionPurchaseActionPerformed(evt);
            }
        });

        buttonPropertyDecisionAuction.setIcon(new javax.swing.ImageIcon(getClass().getResource("/auction.png"))); // NOI18N
        buttonPropertyDecisionAuction.setText("Auction");
        buttonPropertyDecisionAuction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPropertyDecisionAuctionActionPerformed(evt);
            }
        });

        staticLabelPropertyDecision.setText("Would you like to purchase the following property?");

        labelPropertyName.setText("Property Name");

        labelCost.setText("Cost");

        javax.swing.GroupLayout askPropertyDecisionDialogLayout = new javax.swing.GroupLayout(askPropertyDecisionDialog.getContentPane());
        askPropertyDecisionDialog.getContentPane().setLayout(askPropertyDecisionDialogLayout);
        askPropertyDecisionDialogLayout.setHorizontalGroup(
            askPropertyDecisionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(askPropertyDecisionDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(askPropertyDecisionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(askPropertyDecisionDialogLayout.createSequentialGroup()
                        .addComponent(buttonPropertyDecisionPurchase)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonPropertyDecisionAuction))
                    .addGroup(askPropertyDecisionDialogLayout.createSequentialGroup()
                        .addGroup(askPropertyDecisionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(staticLabelPropertyDecision)
                            .addComponent(labelPropertyName)
                            .addComponent(labelCost))
                        .addGap(0, 92, Short.MAX_VALUE)))
                .addContainerGap())
        );
        askPropertyDecisionDialogLayout.setVerticalGroup(
            askPropertyDecisionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, askPropertyDecisionDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(staticLabelPropertyDecision)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelPropertyName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelCost)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 202, Short.MAX_VALUE)
                .addGroup(askPropertyDecisionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonPropertyDecisionPurchase)
                    .addComponent(buttonPropertyDecisionAuction))
                .addContainerGap())
        );

        aboutPaneOld.setSize(new java.awt.Dimension(400, 300));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/robot2.gif"))); // NOI18N
        jLabel2.setText("by Jay Voigt");

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel3.setText("Created as final project for CSCI 24000, Spring 2022.");

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel4.setText("Assets created with Adobe Illustrator and Aesprite.");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo.png"))); // NOI18N

        javax.swing.GroupLayout aboutPaneOldLayout = new javax.swing.GroupLayout(aboutPaneOld.getContentPane());
        aboutPaneOld.getContentPane().setLayout(aboutPaneOldLayout);
        aboutPaneOldLayout.setHorizontalGroup(
            aboutPaneOldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutPaneOldLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(aboutPaneOldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(aboutPaneOldLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 55, Short.MAX_VALUE))
                    .addGroup(aboutPaneOldLayout.createSequentialGroup()
                        .addGroup(aboutPaneOldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(aboutPaneOldLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addGroup(aboutPaneOldLayout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        aboutPaneOldLayout.setVerticalGroup(
            aboutPaneOldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, aboutPaneOldLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(89, 89, 89))
        );

        improvementsDialog.setAlwaysOnTop(true);
        improvementsDialog.setUndecorated(true);
        improvementsDialog.setSize(new java.awt.Dimension(392, 200));

        staticLabelImprovementsTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        staticLabelImprovementsTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/improvements.png"))); // NOI18N
        staticLabelImprovementsTitle.setText("Improvements");

        labelSelectedProperty.setText("Property Name");

        buttonSellHouse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/house.png"))); // NOI18N
        buttonSellHouse.setText("Sell a House");
        buttonSellHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSellHouseActionPerformed(evt);
            }
        });

        buttonBuildHouse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/house.png"))); // NOI18N
        buttonBuildHouse.setText("Build a House");
        buttonBuildHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuildHouseActionPerformed(evt);
            }
        });

        buttonBuildHotel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel.png"))); // NOI18N
        buttonBuildHotel.setText("Build a Hotel");
        buttonBuildHotel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuildHotelActionPerformed(evt);
            }
        });

        buttonSellHotel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel.png"))); // NOI18N
        buttonSellHotel.setText("Sell a Hotel");
        buttonSellHotel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSellHotelActionPerformed(evt);
            }
        });

        labelImprovementInfo.setText("Property Name");

        javax.swing.GroupLayout improvementsDialogLayout = new javax.swing.GroupLayout(improvementsDialog.getContentPane());
        improvementsDialog.getContentPane().setLayout(improvementsDialogLayout);
        improvementsDialogLayout.setHorizontalGroup(
            improvementsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(improvementsDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(improvementsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(improvementsDialogLayout.createSequentialGroup()
                        .addGroup(improvementsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonBuildHouse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonSellHouse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(improvementsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buttonSellHotel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonBuildHotel, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)))
                    .addGroup(improvementsDialogLayout.createSequentialGroup()
                        .addGroup(improvementsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelSelectedProperty)
                            .addComponent(staticLabelImprovementsTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelImprovementInfo))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        improvementsDialogLayout.setVerticalGroup(
            improvementsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(improvementsDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(staticLabelImprovementsTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelSelectedProperty)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelImprovementInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(improvementsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonBuildHouse)
                    .addComponent(buttonBuildHotel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(improvementsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonSellHouse)
                    .addComponent(buttonSellHotel))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        statisticsDialog.setSize(new java.awt.Dimension(400, 300));

        statsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        jScrollPane3.setViewportView(statsTable);

        javax.swing.GroupLayout statisticsDialogLayout = new javax.swing.GroupLayout(statisticsDialog.getContentPane());
        statisticsDialog.getContentPane().setLayout(statisticsDialogLayout);
        statisticsDialogLayout.setHorizontalGroup(
            statisticsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        statisticsDialogLayout.setVerticalGroup(
            statisticsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        jailDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        jailDialog.setAlwaysOnTop(true);
        jailDialog.setIconImage(null);
        jailDialog.setUndecorated(true);
        jailDialog.setSize(new java.awt.Dimension(380, 190));

        staticLabelJailTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        staticLabelJailTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jail.png"))); // NOI18N
        staticLabelJailTitle.setText("Jail");

        buttonJailDialogPostBail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/money.png"))); // NOI18N
        buttonJailDialogPostBail.setText("Post Bail ($50)");
        buttonJailDialogPostBail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonJailDialogPostBailActionPerformed(evt);
            }
        });

        buttonJailDialogRollForDoubles.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dice-icon.png"))); // NOI18N
        buttonJailDialogRollForDoubles.setText("Roll for Doubles");
        buttonJailDialogRollForDoubles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonJailDialogRollForDoublesActionPerformed(evt);
            }
        });

        labelConsecutiveJailedTurns.setText("You have been jailed for n turns.");

        labelConsecutiveJailedTurns1.setText("<html>You may post bail to be freed from the start of your next turn.<br>\nAlternatively, you may choose to roll for doubles.</html>");

        buttonJailDialogUseGOOJFC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goojfc.png"))); // NOI18N
        buttonJailDialogUseGOOJFC.setText("Use Get Out of Jail Free Card");
        buttonJailDialogUseGOOJFC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonJailDialogUseGOOJFCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jailDialogLayout = new javax.swing.GroupLayout(jailDialog.getContentPane());
        jailDialog.getContentPane().setLayout(jailDialogLayout);
        jailDialogLayout.setHorizontalGroup(
            jailDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jailDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jailDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonJailDialogUseGOOJFC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jailDialogLayout.createSequentialGroup()
                        .addComponent(buttonJailDialogPostBail, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonJailDialogRollForDoubles))
                    .addGroup(jailDialogLayout.createSequentialGroup()
                        .addGroup(jailDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(staticLabelJailTitle)
                            .addComponent(labelConsecutiveJailedTurns)
                            .addComponent(labelConsecutiveJailedTurns1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jailDialogLayout.setVerticalGroup(
            jailDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jailDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(staticLabelJailTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelConsecutiveJailedTurns)
                .addGap(18, 18, 18)
                .addComponent(labelConsecutiveJailedTurns1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jailDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonJailDialogPostBail)
                    .addComponent(buttonJailDialogRollForDoubles))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonJailDialogUseGOOJFC)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        playerIconSelector.setUndecorated(true);
        playerIconSelector.setSize(new java.awt.Dimension(256, 256));
        playerIconSelector.getContentPane().setLayout(new java.awt.GridLayout(3, 3));

        buttonIcon1.setIcon(new javax.swing.ImageIcon("/Users/jay/NetBeansProjects/Monoproto3/assets/player-generic.png")); // NOI18N
        buttonIcon1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonIcon1ActionPerformed(evt);
            }
        });
        playerIconSelector.getContentPane().add(buttonIcon1);

        buttonIcon2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player-sweater-top.png"))); // NOI18N
        buttonIcon2.setToolTipText("");
        buttonIcon2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonIcon2ActionPerformed(evt);
            }
        });
        playerIconSelector.getContentPane().add(buttonIcon2);

        buttonIcon3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wealthy.png"))); // NOI18N
        buttonIcon3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonIcon3ActionPerformed(evt);
            }
        });
        playerIconSelector.getContentPane().add(buttonIcon3);

        buttonIcon4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bug.png"))); // NOI18N
        buttonIcon4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonIcon4ActionPerformed(evt);
            }
        });
        playerIconSelector.getContentPane().add(buttonIcon4);

        buttonIcon5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/robot2.gif"))); // NOI18N
        buttonIcon5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonIcon5ActionPerformed(evt);
            }
        });
        playerIconSelector.getContentPane().add(buttonIcon5);

        buttonIcon6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bug-log.png"))); // NOI18N
        buttonIcon6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonIcon6ActionPerformed(evt);
            }
        });
        playerIconSelector.getContentPane().add(buttonIcon6);

        buttonIcon7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/i.png"))); // NOI18N
        buttonIcon7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonIcon7ActionPerformed(evt);
            }
        });
        playerIconSelector.getContentPane().add(buttonIcon7);

        buttonIcon8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cat.png"))); // NOI18N
        buttonIcon8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonIcon8ActionPerformed(evt);
            }
        });
        playerIconSelector.getContentPane().add(buttonIcon8);

        buttonIcon9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/worm.gif"))); // NOI18N
        buttonIcon9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonIcon9ActionPerformed(evt);
            }
        });
        playerIconSelector.getContentPane().add(buttonIcon9);

        mortgageDialog.setUndecorated(true);

        staticLabelMortgage.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        staticLabelMortgage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mortgage.png"))); // NOI18N
        staticLabelMortgage.setText("Mortgage");

        jLabel7.setText("Select a property you wish to mortgage or unmortgage.");

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mortgage.png"))); // NOI18N
        jButton3.setText("Mortgage");

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mortgage.png"))); // NOI18N
        jButton4.setText("Unmortgage");

        jLabel6.setText("jLabel6");

        javax.swing.GroupLayout mortgageDialogLayout = new javax.swing.GroupLayout(mortgageDialog.getContentPane());
        mortgageDialog.getContentPane().setLayout(mortgageDialogLayout);
        mortgageDialogLayout.setHorizontalGroup(
            mortgageDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mortgageDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mortgageDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(mortgageDialogLayout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(mortgageDialogLayout.createSequentialGroup()
                        .addGroup(mortgageDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(staticLabelMortgage)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addGap(0, 68, Short.MAX_VALUE)))
                .addContainerGap())
        );
        mortgageDialogLayout.setVerticalGroup(
            mortgageDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mortgageDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(staticLabelMortgage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addGap(73, 73, 73)
                .addGroup(mortgageDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(112, Short.MAX_VALUE))
        );

        aboutDialog.setUndecorated(true);
        aboutDialog.setSize(new java.awt.Dimension(400, 257));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo.png"))); // NOI18N

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/robot2.gif"))); // NOI18N
        jLabel9.setText("by Jay Voigt");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("<html>\n</center>\nCreated as a final project for CSCI 24000, Spring 2022.\n<br>\nVisual assets created with Adobe Illustrator and Aesprite.\n</center>\n</html>");
        jLabel10.setToolTipText("");

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/red-x.png"))); // NOI18N
        jButton5.setText("Close");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout aboutDialogLayout = new javax.swing.GroupLayout(aboutDialog.getContentPane());
        aboutDialog.getContentPane().setLayout(aboutDialogLayout);
        aboutDialogLayout.setHorizontalGroup(
            aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator8)
                    .addComponent(jLabel10)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, aboutDialogLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton5)))
                .addContainerGap())
        );
        aboutDialogLayout.setVerticalGroup(
            aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addContainerGap())
        );

        forfeitDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        forfeitDialog.setAlwaysOnTop(true);
        forfeitDialog.setUndecorated(true);
        forfeitDialog.setSize(new java.awt.Dimension(321, 197));

        jLabel11.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/surrender.png"))); // NOI18N
        jLabel11.setText("Forfeit");

        jLabel12.setText("<html> <b>Are you sure you want to forfeit the game?</b><br> You will be removed from the game, and your assets<br> will be sold to the Bank. </html>");

        forfeitDialogButtonYes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/surrender.png"))); // NOI18N
        forfeitDialogButtonYes.setText("Yes");

        forfeitDialogButtonNo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/red-x.png"))); // NOI18N
        forfeitDialogButtonNo.setText("No");
        forfeitDialogButtonNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forfeitDialogButtonNoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout forfeitDialogLayout = new javax.swing.GroupLayout(forfeitDialog.getContentPane());
        forfeitDialog.getContentPane().setLayout(forfeitDialogLayout);
        forfeitDialogLayout.setHorizontalGroup(
            forfeitDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(forfeitDialogLayout.createSequentialGroup()
                .addGroup(forfeitDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(forfeitDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(forfeitDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(forfeitDialogLayout.createSequentialGroup()
                        .addComponent(forfeitDialogButtonYes, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(forfeitDialogButtonNo, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        forfeitDialogLayout.setVerticalGroup(
            forfeitDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(forfeitDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addGroup(forfeitDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(forfeitDialogButtonYes)
                    .addComponent(forfeitDialogButtonNo))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Monopoly Game");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                formComponentMoved(evt);
            }
        });

        frameBoard.setTitle("Board");
        frameBoard.setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/board.png"))); // NOI18N
        try {
            frameBoard.setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        frameBoard.setVisible(true);
        frameBoard.getContentPane().setLayout(null);

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setAutoscrolls(true);

        textAreaGameLog.setEditable(false);
        textAreaGameLog.setBackground(new java.awt.Color(255, 255, 255));
        textAreaGameLog.setColumns(20);
        textAreaGameLog.setLineWrap(true);
        textAreaGameLog.setRows(5);
        textAreaGameLog.setBorder(null);
        textAreaGameLog.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(textAreaGameLog);

        frameBoard.getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(160, 420, 660, 400);

        spaceSelectionInformation.setBackground(new java.awt.Color(255, 255, 255));
        spaceSelectionInformation.setLayout(null);

        labelOwnedBy.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        labelOwnedBy.setText("(no selection)");
        spaceSelectionInformation.add(labelOwnedBy);
        labelOwnedBy.setBounds(140, 130, 180, 20);

        staticLabelFriendlyName.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        staticLabelFriendlyName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        staticLabelFriendlyName.setText("Name");
        spaceSelectionInformation.add(staticLabelFriendlyName);
        staticLabelFriendlyName.setBounds(10, 40, 110, 20);

        labelFriendlyName.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        labelFriendlyName.setText("(no selection)");
        spaceSelectionInformation.add(labelFriendlyName);
        labelFriendlyName.setBounds(140, 40, 180, 20);

        staticLabelID.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        staticLabelID.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        staticLabelID.setText("ID");
        spaceSelectionInformation.add(staticLabelID);
        staticLabelID.setBounds(10, 10, 110, 20);

        staticLabelIsOwned.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        staticLabelIsOwned.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        staticLabelIsOwned.setText("Is Owned");
        spaceSelectionInformation.add(staticLabelIsOwned);
        staticLabelIsOwned.setBounds(10, 70, 110, 20);

        staticLabelSpaceType.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        staticLabelSpaceType.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        staticLabelSpaceType.setText("Space Type");
        spaceSelectionInformation.add(staticLabelSpaceType);
        staticLabelSpaceType.setBounds(10, 100, 110, 20);

        staticLabelOwnedBy.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        staticLabelOwnedBy.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        staticLabelOwnedBy.setText("Owned By");
        spaceSelectionInformation.add(staticLabelOwnedBy);
        staticLabelOwnedBy.setBounds(10, 130, 110, 20);

        labelIsOwned.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        labelIsOwned.setText("(no selection)");
        spaceSelectionInformation.add(labelIsOwned);
        labelIsOwned.setBounds(140, 70, 180, 20);

        labelSpaceType.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        labelSpaceType.setText("(no selection)");
        spaceSelectionInformation.add(labelSpaceType);
        labelSpaceType.setBounds(140, 100, 180, 20);

        labelSpaceSelectionID.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        labelSpaceSelectionID.setText("(no selection)");
        spaceSelectionInformation.add(labelSpaceSelectionID);
        labelSpaceSelectionID.setBounds(140, 10, 180, 20);

        staticLabelPurchaseCost.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        staticLabelPurchaseCost.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        staticLabelPurchaseCost.setText("Price");
        spaceSelectionInformation.add(staticLabelPurchaseCost);
        staticLabelPurchaseCost.setBounds(10, 190, 110, 20);

        labelPurchaseCost.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        labelPurchaseCost.setText("(no selection)");
        spaceSelectionInformation.add(labelPurchaseCost);
        labelPurchaseCost.setBounds(140, 190, 180, 20);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        spaceSelectionInformation.add(jSeparator3);
        jSeparator3.setBounds(130, 10, 10, 200);

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        spaceSelectionInformation.add(jSeparator4);
        jSeparator4.setBounds(460, 10, 10, 200);

        staticLabelCurrentRent.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        staticLabelCurrentRent.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        staticLabelCurrentRent.setText("Current Rent");
        spaceSelectionInformation.add(staticLabelCurrentRent);
        staticLabelCurrentRent.setBounds(320, 190, 130, 20);

        labelCurrentRent.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        labelCurrentRent.setText("(no selection)");
        spaceSelectionInformation.add(labelCurrentRent);
        labelCurrentRent.setBounds(470, 190, 180, 20);

        staticLabelRentBase1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        staticLabelRentBase1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        staticLabelRentBase1.setText("Rent");
        spaceSelectionInformation.add(staticLabelRentBase1);
        staticLabelRentBase1.setBounds(320, 10, 130, 20);

        staticLabelRentBase2.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        staticLabelRentBase2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        staticLabelRentBase2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/house-label-1-horiz-rightalign.png"))); // NOI18N
        staticLabelRentBase2.setText("+");
        staticLabelRentBase2.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        spaceSelectionInformation.add(staticLabelRentBase2);
        staticLabelRentBase2.setBounds(320, 40, 130, 20);

        staticLabelRentBase3.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        staticLabelRentBase3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        staticLabelRentBase3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/house-label-2-horiz-rightalign.png"))); // NOI18N
        staticLabelRentBase3.setText("+");
        staticLabelRentBase3.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        spaceSelectionInformation.add(staticLabelRentBase3);
        staticLabelRentBase3.setBounds(320, 70, 130, 20);

        staticLabelRentBase4.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        staticLabelRentBase4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        staticLabelRentBase4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/house-label-3-horiz-rightalign.png"))); // NOI18N
        staticLabelRentBase4.setText("+");
        staticLabelRentBase4.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        spaceSelectionInformation.add(staticLabelRentBase4);
        staticLabelRentBase4.setBounds(320, 100, 130, 20);

        staticLabelRentBase5.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        staticLabelRentBase5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        staticLabelRentBase5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/house-label-4-horiz-rightalign.png"))); // NOI18N
        staticLabelRentBase5.setText("+");
        staticLabelRentBase5.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        spaceSelectionInformation.add(staticLabelRentBase5);
        staticLabelRentBase5.setBounds(320, 130, 130, 20);

        labelRentBase.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        labelRentBase.setText("(no selection)");
        spaceSelectionInformation.add(labelRentBase);
        labelRentBase.setBounds(470, 10, 180, 20);

        labelRent1House.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        labelRent1House.setText("(no selection)");
        spaceSelectionInformation.add(labelRent1House);
        labelRent1House.setBounds(470, 40, 180, 20);

        labelRent2Houses.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        labelRent2Houses.setText("(no selection)");
        spaceSelectionInformation.add(labelRent2Houses);
        labelRent2Houses.setBounds(470, 70, 180, 20);

        labelRent3Houses.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        labelRent3Houses.setText("(no selection)");
        spaceSelectionInformation.add(labelRent3Houses);
        labelRent3Houses.setBounds(470, 100, 180, 20);

        labelRent4Houses.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        labelRent4Houses.setText("(no selection)");
        spaceSelectionInformation.add(labelRent4Houses);
        labelRent4Houses.setBounds(470, 130, 180, 20);

        staticLabelTimesLanded.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        staticLabelTimesLanded.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        staticLabelTimesLanded.setText("Landed");
        spaceSelectionInformation.add(staticLabelTimesLanded);
        staticLabelTimesLanded.setBounds(10, 160, 110, 20);

        labelTimesLanded.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        labelTimesLanded.setText("(no selection)");
        spaceSelectionInformation.add(labelTimesLanded);
        labelTimesLanded.setBounds(140, 160, 180, 20);

        staticLabelRentBase6.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        staticLabelRentBase6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        staticLabelRentBase6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel-label-1-horiz-rightalign.png"))); // NOI18N
        staticLabelRentBase6.setText("+");
        staticLabelRentBase6.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        spaceSelectionInformation.add(staticLabelRentBase6);
        staticLabelRentBase6.setBounds(320, 160, 130, 20);

        labelRentHotel1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        labelRentHotel1.setText("(no selection)");
        spaceSelectionInformation.add(labelRentHotel1);
        labelRentHotel1.setBounds(470, 160, 180, 20);

        frameBoard.getContentPane().add(spaceSelectionInformation);
        spaceSelectionInformation.setBounds(160, 150, 660, 220);

        iconPlayer1Position.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player-icon-1-px.png"))); // NOI18N
        iconPlayer1Position.setText("jLabel1");
        iconPlayer1Position.setAlignmentY(0.0F);
        iconPlayer1Position.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        frameBoard.getContentPane().add(iconPlayer1Position);
        iconPlayer1Position.setBounds(110, 850, 20, 20);

        iconPlayer2Position.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player-icon-2-px.png"))); // NOI18N
        iconPlayer2Position.setText("jLabel1");
        iconPlayer2Position.setAlignmentY(0.0F);
        frameBoard.getContentPane().add(iconPlayer2Position);
        iconPlayer2Position.setBounds(10, 150, 20, 20);

        iconPlayer3Position.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player-icon-3-px.png"))); // NOI18N
        iconPlayer3Position.setText("jLabel1");
        iconPlayer3Position.setAlignmentY(0.0F);
        frameBoard.getContentPane().add(iconPlayer3Position);
        iconPlayer3Position.setBounds(10, 170, 20, 20);

        iconPlayer4Position.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player-icon-4-px.png"))); // NOI18N
        iconPlayer4Position.setText("jLabel1");
        iconPlayer4Position.setAlignmentY(0.0F);
        frameBoard.getContentPane().add(iconPlayer4Position);
        iconPlayer4Position.setBounds(10, 190, 20, 20);

        buttonSpace0.setBackground(new java.awt.Color(249, 249, 249));
        buttonSpace0.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace0.setContentAreaFilled(false);
        buttonSpace0.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace0.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace0ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace0);
        buttonSpace0.setBounds(850, 850, 120, 120);

        buttonSpace1.setBackground(new java.awt.Color(102, 51, 0));
        buttonSpace1.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace1.setForeground(new java.awt.Color(255, 255, 255));
        buttonSpace1.setContentAreaFilled(false);
        buttonSpace1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace1.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace1ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace1);
        buttonSpace1.setBounds(770, 850, 80, 120);

        buttonSpace2.setBackground(new java.awt.Color(204, 255, 255));
        buttonSpace2.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace2.setContentAreaFilled(false);
        buttonSpace2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace2.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace2ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace2);
        buttonSpace2.setBounds(690, 850, 80, 120);

        buttonSpace3.setBackground(new java.awt.Color(102, 51, 0));
        buttonSpace3.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace3.setForeground(new java.awt.Color(255, 255, 255));
        buttonSpace3.setContentAreaFilled(false);
        buttonSpace3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace3.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace3ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace3);
        buttonSpace3.setBounds(610, 850, 80, 120);

        buttonSpace4.setBackground(new java.awt.Color(249, 249, 249));
        buttonSpace4.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace4.setContentAreaFilled(false);
        buttonSpace4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace4.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace4ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace4);
        buttonSpace4.setBounds(530, 850, 80, 120);

        buttonSpace5.setBackground(new java.awt.Color(51, 51, 51));
        buttonSpace5.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace5.setForeground(new java.awt.Color(255, 255, 255));
        buttonSpace5.setContentAreaFilled(false);
        buttonSpace5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace5.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace5ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace5);
        buttonSpace5.setBounds(450, 850, 80, 120);

        buttonSpace6.setBackground(new java.awt.Color(153, 204, 255));
        buttonSpace6.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace6.setContentAreaFilled(false);
        buttonSpace6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace6.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace6ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace6);
        buttonSpace6.setBounds(370, 850, 80, 120);

        buttonSpace7.setBackground(new java.awt.Color(255, 204, 153));
        buttonSpace7.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace7.setContentAreaFilled(false);
        buttonSpace7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace7.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace7ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace7);
        buttonSpace7.setBounds(290, 850, 80, 120);

        buttonSpace8.setBackground(new java.awt.Color(153, 204, 255));
        buttonSpace8.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace8.setContentAreaFilled(false);
        buttonSpace8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace8.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace8ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace8);
        buttonSpace8.setBounds(210, 850, 80, 120);

        buttonSpace9.setBackground(new java.awt.Color(153, 204, 255));
        buttonSpace9.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace9.setContentAreaFilled(false);
        buttonSpace9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace9.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace9ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace9);
        buttonSpace9.setBounds(130, 850, 80, 120);

        buttonSpace10.setBackground(new java.awt.Color(204, 204, 204));
        buttonSpace10.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace10.setContentAreaFilled(false);
        buttonSpace10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace10.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace10ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace10);
        buttonSpace10.setBounds(10, 850, 120, 120);

        buttonSpace11.setBackground(new java.awt.Color(255, 102, 153));
        buttonSpace11.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace11.setContentAreaFilled(false);
        buttonSpace11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace11.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace11ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace11);
        buttonSpace11.setBounds(10, 770, 120, 80);

        buttonSpace12.setBackground(new java.awt.Color(249, 249, 249));
        buttonSpace12.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace12.setContentAreaFilled(false);
        buttonSpace12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace12.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonSpace12MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonSpace12MouseExited(evt);
            }
        });
        buttonSpace12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace12ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace12);
        buttonSpace12.setBounds(10, 690, 120, 80);

        buttonSpace13.setBackground(new java.awt.Color(255, 102, 153));
        buttonSpace13.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace13.setContentAreaFilled(false);
        buttonSpace13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace13.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace13ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace13);
        buttonSpace13.setBounds(10, 610, 120, 80);

        buttonSpace14.setBackground(new java.awt.Color(255, 102, 153));
        buttonSpace14.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace14.setContentAreaFilled(false);
        buttonSpace14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace14.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace14ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace14);
        buttonSpace14.setBounds(10, 530, 120, 80);

        buttonSpace15.setBackground(new java.awt.Color(51, 51, 51));
        buttonSpace15.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace15.setForeground(new java.awt.Color(255, 255, 255));
        buttonSpace15.setContentAreaFilled(false);
        buttonSpace15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace15.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace15ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace15);
        buttonSpace15.setBounds(10, 450, 120, 80);

        buttonSpace16.setBackground(new java.awt.Color(255, 153, 0));
        buttonSpace16.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace16.setContentAreaFilled(false);
        buttonSpace16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace16.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace16ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace16);
        buttonSpace16.setBounds(10, 370, 120, 80);

        buttonSpace17.setBackground(new java.awt.Color(204, 255, 255));
        buttonSpace17.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace17.setContentAreaFilled(false);
        buttonSpace17.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace17.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace17ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace17);
        buttonSpace17.setBounds(10, 290, 120, 80);

        buttonSpace18.setBackground(new java.awt.Color(255, 153, 0));
        buttonSpace18.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace18.setContentAreaFilled(false);
        buttonSpace18.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace18.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace18ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace18);
        buttonSpace18.setBounds(10, 210, 120, 80);

        buttonSpace19.setBackground(new java.awt.Color(255, 153, 0));
        buttonSpace19.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace19.setContentAreaFilled(false);
        buttonSpace19.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace19.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace19ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace19);
        buttonSpace19.setBounds(10, 130, 120, 80);

        buttonSpace20.setBackground(new java.awt.Color(249, 249, 249));
        buttonSpace20.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace20.setContentAreaFilled(false);
        buttonSpace20.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace20.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonSpace20MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonSpace20MouseExited(evt);
            }
        });
        buttonSpace20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace20ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace20);
        buttonSpace20.setBounds(10, 10, 120, 120);

        buttonSpace21.setBackground(new java.awt.Color(255, 102, 102));
        buttonSpace21.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace21.setForeground(new java.awt.Color(255, 255, 255));
        buttonSpace21.setContentAreaFilled(false);
        buttonSpace21.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace21.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace21ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace21);
        buttonSpace21.setBounds(130, 10, 80, 120);

        buttonSpace22.setBackground(new java.awt.Color(255, 204, 153));
        buttonSpace22.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace22.setContentAreaFilled(false);
        buttonSpace22.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace22.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace22ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace22);
        buttonSpace22.setBounds(210, 10, 80, 120);

        buttonSpace23.setBackground(new java.awt.Color(255, 101, 101));
        buttonSpace23.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace23.setForeground(new java.awt.Color(255, 255, 255));
        buttonSpace23.setContentAreaFilled(false);
        buttonSpace23.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace23.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace23ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace23);
        buttonSpace23.setBounds(290, 10, 80, 120);

        buttonSpace24.setBackground(new java.awt.Color(255, 102, 102));
        buttonSpace24.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace24.setForeground(new java.awt.Color(255, 255, 255));
        buttonSpace24.setContentAreaFilled(false);
        buttonSpace24.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace24.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace24ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace24);
        buttonSpace24.setBounds(370, 10, 80, 120);

        buttonSpace25.setBackground(new java.awt.Color(51, 51, 51));
        buttonSpace25.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace25.setForeground(new java.awt.Color(255, 255, 255));
        buttonSpace25.setContentAreaFilled(false);
        buttonSpace25.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace25.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace25ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace25);
        buttonSpace25.setBounds(450, 10, 80, 120);

        buttonSpace26.setBackground(new java.awt.Color(255, 255, 51));
        buttonSpace26.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace26.setContentAreaFilled(false);
        buttonSpace26.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace26.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace26ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace26);
        buttonSpace26.setBounds(530, 10, 80, 120);

        buttonSpace27.setBackground(new java.awt.Color(255, 255, 51));
        buttonSpace27.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace27.setContentAreaFilled(false);
        buttonSpace27.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace27.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace27ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace27);
        buttonSpace27.setBounds(610, 10, 80, 120);

        buttonSpace28.setBackground(new java.awt.Color(249, 249, 249));
        buttonSpace28.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace28.setContentAreaFilled(false);
        buttonSpace28.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace28.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace28.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonSpace28MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonSpace28MouseExited(evt);
            }
        });
        buttonSpace28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace28ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace28);
        buttonSpace28.setBounds(690, 10, 80, 120);

        buttonSpace29.setBackground(new java.awt.Color(255, 255, 51));
        buttonSpace29.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace29.setContentAreaFilled(false);
        buttonSpace29.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace29.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace29ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace29);
        buttonSpace29.setBounds(770, 10, 80, 120);

        buttonSpace30.setBackground(new java.awt.Color(204, 204, 204));
        buttonSpace30.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace30.setContentAreaFilled(false);
        buttonSpace30.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace30.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace30ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace30);
        buttonSpace30.setBounds(850, 10, 120, 120);

        buttonSpace31.setBackground(new java.awt.Color(0, 153, 0));
        buttonSpace31.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace31.setForeground(new java.awt.Color(255, 255, 255));
        buttonSpace31.setContentAreaFilled(false);
        buttonSpace31.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace31.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace31ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace31);
        buttonSpace31.setBounds(850, 130, 120, 80);

        buttonSpace32.setBackground(new java.awt.Color(0, 153, 0));
        buttonSpace32.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace32.setForeground(new java.awt.Color(255, 255, 255));
        buttonSpace32.setContentAreaFilled(false);
        buttonSpace32.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace32.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace32ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace32);
        buttonSpace32.setBounds(850, 210, 120, 80);

        buttonSpace33.setBackground(new java.awt.Color(204, 255, 255));
        buttonSpace33.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace33.setContentAreaFilled(false);
        buttonSpace33.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace33.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace33ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace33);
        buttonSpace33.setBounds(850, 290, 120, 80);

        buttonSpace34.setBackground(new java.awt.Color(0, 153, 0));
        buttonSpace34.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace34.setForeground(new java.awt.Color(255, 255, 255));
        buttonSpace34.setContentAreaFilled(false);
        buttonSpace34.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace34.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace34ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace34);
        buttonSpace34.setBounds(850, 370, 120, 80);

        buttonSpace35.setBackground(new java.awt.Color(51, 51, 51));
        buttonSpace35.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace35.setForeground(new java.awt.Color(255, 255, 255));
        buttonSpace35.setContentAreaFilled(false);
        buttonSpace35.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace35.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace35ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace35);
        buttonSpace35.setBounds(850, 450, 120, 80);

        buttonSpace36.setBackground(new java.awt.Color(255, 204, 153));
        buttonSpace36.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace36.setContentAreaFilled(false);
        buttonSpace36.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace36.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace36ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace36);
        buttonSpace36.setBounds(850, 530, 120, 80);

        buttonSpace37.setBackground(new java.awt.Color(0, 51, 153));
        buttonSpace37.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace37.setForeground(new java.awt.Color(255, 255, 255));
        buttonSpace37.setContentAreaFilled(false);
        buttonSpace37.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace37.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace37ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace37);
        buttonSpace37.setBounds(850, 610, 120, 80);

        buttonSpace38.setBackground(new java.awt.Color(249, 249, 249));
        buttonSpace38.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace38.setContentAreaFilled(false);
        buttonSpace38.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace38.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace38.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonSpace38MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonSpace38MouseExited(evt);
            }
        });
        buttonSpace38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace38ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace38);
        buttonSpace38.setBounds(850, 690, 120, 80);

        buttonSpace39.setBackground(new java.awt.Color(0, 51, 153));
        buttonSpace39.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        buttonSpace39.setForeground(new java.awt.Color(255, 255, 255));
        buttonSpace39.setContentAreaFilled(false);
        buttonSpace39.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonSpace39.setMargin(new java.awt.Insets(1, 1, 1, 1));
        buttonSpace39.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpace39ActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(buttonSpace39);
        buttonSpace39.setBounds(850, 770, 120, 80);

        staticLabelSearchGameLog.setText("Search game log:");
        frameBoard.getContentPane().add(staticLabelSearchGameLog);
        staticLabelSearchGameLog.setBounds(470, 390, 110, 20);

        formattedTextFieldGameLogSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formattedTextFieldGameLogSearchActionPerformed(evt);
            }
        });
        frameBoard.getContentPane().add(formattedTextFieldGameLogSearch);
        formattedTextFieldGameLogSearch.setBounds(580, 390, 240, 23);

        labelBoardImageReference.setIcon(new javax.swing.ImageIcon(getClass().getResource("/board-px-template.png"))); // NOI18N
        labelBoardImageReference.setText("jLabel1");
        frameBoard.getContentPane().add(labelBoardImageReference);
        labelBoardImageReference.setBounds(10, 10, 960, 960);

        controlPanelGameInformation.setTitle("Game Information");
        controlPanelGameInformation.setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/i.png"))); // NOI18N
        try {
            controlPanelGameInformation.setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        controlPanelGameInformation.setVisible(true);

        labelPlayer1Name.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        labelPlayer1Name.setText("Player 1");

        labelPlayer2Name.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        labelPlayer2Name.setText("Player 2");

        labelPlayer3Name.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        labelPlayer3Name.setText("Player 3");

        labelPlayer4Name.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        labelPlayer4Name.setText("Player 4");

        labelPlayer1ActiveIcon.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        labelPlayer1ActiveIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dice-icon.png"))); // NOI18N
        labelPlayer1ActiveIcon.setText("Player 1");

        javax.swing.GroupLayout controlPanelGameInformationLayout = new javax.swing.GroupLayout(controlPanelGameInformation.getContentPane());
        controlPanelGameInformation.getContentPane().setLayout(controlPanelGameInformationLayout);
        controlPanelGameInformationLayout.setHorizontalGroup(
            controlPanelGameInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelGameInformationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelPlayer1ActiveIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(controlPanelGameInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelPlayer1Name)
                    .addComponent(labelPlayer2Name)
                    .addComponent(labelPlayer3Name)
                    .addComponent(labelPlayer4Name))
                .addContainerGap(248, Short.MAX_VALUE))
        );
        controlPanelGameInformationLayout.setVerticalGroup(
            controlPanelGameInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelGameInformationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(controlPanelGameInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPlayer1Name)
                    .addComponent(labelPlayer1ActiveIcon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelPlayer2Name)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelPlayer3Name)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelPlayer4Name)
                .addContainerGap(255, Short.MAX_VALUE))
        );

        controlPanelActions.setTitle("Actions");
        controlPanelActions.setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/doc-with-pencil.png"))); // NOI18N
        try {
            controlPanelActions.setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        controlPanelActions.setVisible(true);
        controlPanelActions.getContentPane().setLayout(null);

        buttonEndTurn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/arrow.png"))); // NOI18N
        buttonEndTurn.setText("End Turn");
        buttonEndTurn.setFocusPainted(false);
        buttonEndTurn.setMargin(new java.awt.Insets(2, 6, 2, 6));
        buttonEndTurn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEndTurnActionPerformed(evt);
            }
        });
        controlPanelActions.getContentPane().add(buttonEndTurn);
        buttonEndTurn.setBounds(200, 270, 105, 58);

        buttonRollDice.setIcon(new javax.swing.ImageIcon("/Users/jay/NetBeansProjects/Monoproto3/src/main/resources/dice-icon.png")); // NOI18N
        buttonRollDice.setText("Roll Dice");
        buttonRollDice.setFocusPainted(false);
        buttonRollDice.setMargin(new java.awt.Insets(2, 6, 2, 6));
        buttonRollDice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRollDiceActionPerformed(evt);
            }
        });
        controlPanelActions.getContentPane().add(buttonRollDice);
        buttonRollDice.setBounds(10, 269, 110, 60);

        staticLabelCurrentPlayer.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        staticLabelCurrentPlayer.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        staticLabelCurrentPlayer.setText("Current Player");
        controlPanelActions.getContentPane().add(staticLabelCurrentPlayer);
        staticLabelCurrentPlayer.setBounds(30, 10, 131, 20);

        labelCurrentPlayer.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        labelCurrentPlayer.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelCurrentPlayer.setText("n/a");
        controlPanelActions.getContentPane().add(labelCurrentPlayer);
        labelCurrentPlayer.setBounds(180, 10, 140, 20);

        labelDie2.setFont(new java.awt.Font("Courier", 0, 18)); // NOI18N
        labelDie2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDie2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/die-50px-0pip.png"))); // NOI18N
        controlPanelActions.getContentPane().add(labelDie2);
        labelDie2.setBounds(70, 210, 50, 50);

        labelDie1.setFont(new java.awt.Font("Courier", 0, 18)); // NOI18N
        labelDie1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDie1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/die-50px-0pip.png"))); // NOI18N
        controlPanelActions.getContentPane().add(labelDie1);
        labelDie1.setBounds(10, 210, 50, 50);

        staticLabelCurrentBalance.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        staticLabelCurrentBalance.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        staticLabelCurrentBalance.setText("Balance");
        controlPanelActions.getContentPane().add(staticLabelCurrentBalance);
        staticLabelCurrentBalance.setBounds(30, 40, 131, 20);

        labelCurrentBalance.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        labelCurrentBalance.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelCurrentBalance.setText("n/a");
        controlPanelActions.getContentPane().add(labelCurrentBalance);
        labelCurrentBalance.setBounds(180, 40, 140, 20);

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);
        controlPanelActions.getContentPane().add(jSeparator5);
        jSeparator5.setBounds(170, 0, 10, 100);
        controlPanelActions.getContentPane().add(jSeparator6);
        jSeparator6.setBounds(0, 200, 330, 20);

        staticLabelPosition.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        staticLabelPosition.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        staticLabelPosition.setText("Position");
        controlPanelActions.getContentPane().add(staticLabelPosition);
        staticLabelPosition.setBounds(30, 70, 131, 20);

        labelCurrentPosition.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        labelCurrentPosition.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelCurrentPosition.setText("n/a");
        controlPanelActions.getContentPane().add(labelCurrentPosition);
        labelCurrentPosition.setBounds(180, 70, 140, 20);
        controlPanelActions.getContentPane().add(jSeparator7);
        jSeparator7.setBounds(0, 100, 330, 10);

        buttonActionTrade.setIcon(new javax.swing.ImageIcon(getClass().getResource("/trade.png"))); // NOI18N
        buttonActionTrade.setText("Trade");
        buttonActionTrade.setFocusPainted(false);
        buttonActionTrade.setMargin(new java.awt.Insets(2, 6, 2, 6));
        buttonActionTrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionTradeActionPerformed(evt);
            }
        });
        controlPanelActions.getContentPane().add(buttonActionTrade);
        buttonActionTrade.setBounds(10, 170, 140, 24);

        buttonActionMortgage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mortgage.png"))); // NOI18N
        buttonActionMortgage.setText("Mortgage");
        buttonActionMortgage.setToolTipText("Mortgage a property you own.");
        buttonActionMortgage.setFocusPainted(false);
        buttonActionMortgage.setMargin(new java.awt.Insets(2, 6, 2, 6));
        buttonActionMortgage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionMortgageActionPerformed(evt);
            }
        });
        controlPanelActions.getContentPane().add(buttonActionMortgage);
        buttonActionMortgage.setBounds(10, 110, 140, 24);

        buttonActionImprovements.setIcon(new javax.swing.ImageIcon(getClass().getResource("/improvements.png"))); // NOI18N
        buttonActionImprovements.setText("Improvements");
        buttonActionImprovements.setToolTipText("Build and sell houses and hotels.");
        buttonActionImprovements.setFocusPainted(false);
        buttonActionImprovements.setMargin(new java.awt.Insets(2, 6, 2, 6));
        buttonActionImprovements.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionImprovementsActionPerformed(evt);
            }
        });
        controlPanelActions.getContentPane().add(buttonActionImprovements);
        buttonActionImprovements.setBounds(10, 140, 140, 24);

        buttonProperties.setIcon(new javax.swing.ImageIcon(getClass().getResource("/properties.png"))); // NOI18N
        buttonProperties.setText("Properties");
        buttonProperties.setToolTipText("Highlight properties that you currently own.");
        buttonProperties.setFocusPainted(false);
        buttonProperties.setMargin(new java.awt.Insets(2, 6, 2, 6));
        buttonProperties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPropertiesActionPerformed(evt);
            }
        });
        controlPanelActions.getContentPane().add(buttonProperties);
        buttonProperties.setBounds(180, 110, 140, 23);

        buttonActionImprovements1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/statistics.png"))); // NOI18N
        buttonActionImprovements1.setText("Statistics");
        buttonActionImprovements1.setToolTipText("");
        buttonActionImprovements1.setFocusPainted(false);
        buttonActionImprovements1.setMargin(new java.awt.Insets(2, 6, 2, 6));
        controlPanelActions.getContentPane().add(buttonActionImprovements1);
        buttonActionImprovements1.setBounds(180, 140, 140, 24);

        buttonForfeit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/surrender.png"))); // NOI18N
        buttonForfeit.setText("Forfeit");
        buttonForfeit.setFocusPainted(false);
        buttonForfeit.setMargin(new java.awt.Insets(2, 6, 2, 6));
        buttonForfeit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonForfeitActionPerformed(evt);
            }
        });
        controlPanelActions.getContentPane().add(buttonForfeit);
        buttonForfeit.setBounds(180, 170, 140, 24);

        labelCurrentPlayerIcon.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        labelCurrentPlayerIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player-generic.png"))); // NOI18N
        labelCurrentPlayerIcon.setText("Player 1");
        controlPanelActions.getContentPane().add(labelCurrentPlayerIcon);
        labelCurrentPlayerIcon.setBounds(10, 10, 18, 18);

        staticLabelPositionIcon.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        staticLabelPositionIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/position.png"))); // NOI18N
        staticLabelPositionIcon.setText("Player 1");
        controlPanelActions.getContentPane().add(staticLabelPositionIcon);
        staticLabelPositionIcon.setBounds(10, 70, 18, 18);

        labelCurrentBalanceIcon1.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        labelCurrentBalanceIcon1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/money.png"))); // NOI18N
        labelCurrentBalanceIcon1.setText("Player 1");
        controlPanelActions.getContentPane().add(labelCurrentBalanceIcon1);
        labelCurrentBalanceIcon1.setBounds(10, 40, 18, 18);

        menuFile.setText("File");

        menuFileNewGame.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuFileNewGame.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newgame.png"))); // NOI18N
        menuFileNewGame.setText("New Game...");
        menuFileNewGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileNewGameActionPerformed(evt);
            }
        });
        menuFile.add(menuFileNewGame);

        menuFileLoadGame.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuFileLoadGame.setIcon(new javax.swing.ImageIcon(getClass().getResource("/floppygame.png"))); // NOI18N
        menuFileLoadGame.setText("Load Game...");
        menuFileLoadGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileLoadGameActionPerformed(evt);
            }
        });
        menuFile.add(menuFileLoadGame);

        menuFileSaveGame.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuFileSaveGame.setIcon(new javax.swing.ImageIcon(getClass().getResource("/floppygame.png"))); // NOI18N
        menuFileSaveGame.setText("Save Game...");
        menuFileSaveGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileSaveGameActionPerformed(evt);
            }
        });
        menuFile.add(menuFileSaveGame);

        menuFileQuit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuFileQuit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/red-x.png"))); // NOI18N
        menuFileQuit.setText("Quit");
        menuFileQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileQuitActionPerformed(evt);
            }
        });
        menuFile.add(menuFileQuit);

        jMenuBar1.add(menuFile);

        menuEdit.setText("Edit");

        menuEditGameEditor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuEditGameEditor.setForeground(new java.awt.Color(255, 0, 0));
        menuEditGameEditor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/matrix-anim.gif"))); // NOI18N
        menuEditGameEditor.setText("Game Editor...");
        menuEditGameEditor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditGameEditorActionPerformed(evt);
            }
        });
        menuEdit.add(menuEditGameEditor);

        menuEditDebugTools.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuEditDebugTools.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bug-anim.gif"))); // NOI18N
        menuEditDebugTools.setText("Debug Tools");
        menuEditDebugTools.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditDebugToolsActionPerformed(evt);
            }
        });
        menuEdit.add(menuEditDebugTools);

        jMenuBar1.add(menuEdit);

        menuView.setText("View");

        menuViewCheckBoxShowDebugLog.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuViewCheckBoxShowDebugLog.setSelected(true);
        menuViewCheckBoxShowDebugLog.setText("Show Debug Log");
        menuViewCheckBoxShowDebugLog.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bug-log-anim.gif"))); // NOI18N
        menuViewCheckBoxShowDebugLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuViewCheckBoxShowDebugLogActionPerformed(evt);
            }
        });
        menuView.add(menuViewCheckBoxShowDebugLog);

        menuViewManuallyUpdateView.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuViewManuallyUpdateView.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bug-anim.gif"))); // NOI18N
        menuViewManuallyUpdateView.setText("Manually Update View");
        menuViewManuallyUpdateView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuViewManuallyUpdateViewActionPerformed(evt);
            }
        });
        menuView.add(menuViewManuallyUpdateView);

        menuViewToggleExtraPadding.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuViewToggleExtraPadding.setIcon(new javax.swing.ImageIcon(getClass().getResource("/i.png"))); // NOI18N
        menuViewToggleExtraPadding.setText("Toggle Extra Text Padding in Game Log");
        menuViewToggleExtraPadding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuViewToggleExtraPaddingActionPerformed(evt);
            }
        });
        menuView.add(menuViewToggleExtraPadding);

        jMenuBar1.add(menuView);

        menuHelp.setText("Help");

        menuHelpAbout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuHelpAbout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/robot.png"))); // NOI18N
        menuHelpAbout.setText("About");
        menuHelpAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuHelpAboutActionPerformed(evt);
            }
        });
        menuHelp.add(menuHelpAbout);

        jMenuBar1.add(menuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(frameBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 990, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(controlPanelGameInformation)
                    .addComponent(controlPanelActions)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(frameBoard)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(controlPanelGameInformation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 250, Short.MAX_VALUE)
                        .addComponent(controlPanelActions, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	// <editor-fold desc="Update and helper methods">
	public void update() {
		initInfoUIForCurrentPlayer();
		updateButtonLockStates();
		gameInactiveUILocker();
		updateDiceView();
		updateCustomSpaceAppearances();
		updateImprovementIcons();
		
		for (int i = 1; i <= 4; i++) {
			updateVisualPlayerIndicator(board.players.get(i));
		}
		
		updatePromptPropertyDecision();
		updatePromptPostBailDecision();
		
		boolean searchFieldEnabled = true;
		for (JDialog d : jDialogs) {
			if (d.isVisible() == true) {
				searchFieldEnabled = false;
			}
		}
		
		if (searchFieldEnabled == false) {
			formattedTextFieldGameLogSearch.setEnabled(false);
		}
		else {
			formattedTextFieldGameLogSearch.setEnabled(true);
		}
		
		updateDebugLogFromController();
		updateGameLog();
	}
	
	private void addBoardBackground() {
		labelBoardImage = new javax.swing.JLabel();
		
		labelBoardImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/board-px-template.png"))); // NOI18N
        labelBoardImage.setText("jLabel1");
        frameBoard.getContentPane().add(labelBoardImage);
        labelBoardImage.setBounds(10, 10, 960, 960);
	}
	
	private void gameInactiveUILocker() {
		if (controller.getIsGameActive() == false) {
			lockRollDice();
			lockEndTurn();
		}
	}

	private void initInfoUIForCurrentPlayer() {
		Player currentPlayer = board.players.get(board.getCurrentPlayerID());
		labelCurrentPlayer.setText(currentPlayer.getCustomName());
		labelCurrentBalance.setText("$" + Integer.toString(currentPlayer.getCurrentBalance()));
		if (currentPlayer.getIsJailed() == true) {
			labelCurrentPosition.setText("In Jail!");
		}
		else {
			if (currentPlayer.getCurrentPosition() == 10) {
				labelCurrentPosition.setText("Jail (just visiting)");
			}
			else {
				labelCurrentPosition.setText(board.spaces.get(currentPlayer.getCurrentPosition()).getFriendlyName());
			}
		}
		if (currentPlayer.getIsComputerControlled() == true) {
			labelCurrentPlayerIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/robot.png"))); // NOI18N
		}
		else if (currentPlayer.getCurrentBalance() < 10000) {
			// Only set animated icon if player is not jailed
			if (currentPlayer.getIsJailed() == false) {
				if (Math.random() >= 0.9) {
					// The player icon will blink at you sometimes
					labelCurrentPlayerIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player-generic-anim.gif")));
				}
				else {
					labelCurrentPlayerIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player-generic.png")));
				}
			}
			else {
				// Icon for jailed players
				labelCurrentPlayerIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jail.png")));
			}
		}
		else {
			labelCurrentPlayerIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/wealthy.png")));
		}

		appendToDebugLog("[initUIForCurrentPlayer] Current player: " + currentPlayer.getCustomName());
	}

	private void updateButtonLockStates() {
		currentPlayer = board.players.get(board.getCurrentPlayerID());

		if (currentPlayer.getActionLockedEndTurn() == false) {
			unlockEndTurn();
		}
		else {
			lockEndTurn();
		}

		if (currentPlayer.getActionLockedRollDice() == false) {
			unlockRollDice();
		}
		else {
			lockRollDice();
		}
	}

	private void customInitComponents() {

		textFieldPlayer1Name.setEnabled(true);
		textFieldPlayer2Name.setEnabled(false);
		textFieldPlayer3Name.setEnabled(false);
		textFieldPlayer4Name.setEnabled(false);

		buttonEndTurn.setEnabled(false);
		buttonRollDice.setEnabled(false);

		spinnerStartingBalance.setValue(1500);

		debugLogFrame.setVisible(false);
		menuViewCheckBoxShowDebugLog.setState(false);

		labelBoardImageReference.setSize(960, 960);

		spaceButtons = new ArrayList<JButton>();

		spaceButtons.add(buttonSpace0);
		spaceButtons.add(buttonSpace1);
		spaceButtons.add(buttonSpace2);
		spaceButtons.add(buttonSpace3);
		spaceButtons.add(buttonSpace4);
		spaceButtons.add(buttonSpace5);
		spaceButtons.add(buttonSpace6);
		spaceButtons.add(buttonSpace7);
		spaceButtons.add(buttonSpace8);
		spaceButtons.add(buttonSpace9);
		spaceButtons.add(buttonSpace10);
		spaceButtons.add(buttonSpace11);
		spaceButtons.add(buttonSpace12);
		spaceButtons.add(buttonSpace13);
		spaceButtons.add(buttonSpace14);
		spaceButtons.add(buttonSpace15);
		spaceButtons.add(buttonSpace16);
		spaceButtons.add(buttonSpace17);
		spaceButtons.add(buttonSpace18);
		spaceButtons.add(buttonSpace19);
		spaceButtons.add(buttonSpace20);
		spaceButtons.add(buttonSpace21);
		spaceButtons.add(buttonSpace22);
		spaceButtons.add(buttonSpace23);
		spaceButtons.add(buttonSpace24);
		spaceButtons.add(buttonSpace25);
		spaceButtons.add(buttonSpace26);
		spaceButtons.add(buttonSpace27);
		spaceButtons.add(buttonSpace28);
		spaceButtons.add(buttonSpace29);
		spaceButtons.add(buttonSpace30);
		spaceButtons.add(buttonSpace31);
		spaceButtons.add(buttonSpace32);
		spaceButtons.add(buttonSpace33);
		spaceButtons.add(buttonSpace34);
		spaceButtons.add(buttonSpace35);
		spaceButtons.add(buttonSpace36);
		spaceButtons.add(buttonSpace37);
		spaceButtons.add(buttonSpace38);
		spaceButtons.add(buttonSpace39);

		diceIcons = new ArrayList<javax.swing.ImageIcon>();

		diceIcons.add(new javax.swing.ImageIcon(getClass().getResource("/die-50px-0pip.png")));
		diceIcons.add(new javax.swing.ImageIcon(getClass().getResource("/die-50px-1pip.png")));
		diceIcons.add(new javax.swing.ImageIcon(getClass().getResource("/die-50px-2pip.png")));
		diceIcons.add(new javax.swing.ImageIcon(getClass().getResource("/die-50px-3pip.png")));
		diceIcons.add(new javax.swing.ImageIcon(getClass().getResource("/die-50px-4pip.png")));
		diceIcons.add(new javax.swing.ImageIcon(getClass().getResource("/die-50px-5pip.png")));
		diceIcons.add(new javax.swing.ImageIcon(getClass().getResource("/die-50px-6pip.png")));

		jDialogs.add(gameSetupDialog);
		jDialogs.add(gameEditorDialog);
		jDialogs.add(debugToolsDialog);
		jDialogs.add(askPropertyDecisionDialog);
		jDialogs.add(improvementsDialog);
		jDialogs.add(statisticsDialog);
		jDialogs.add(jailDialog);
		jDialogs.add(playerIconSelector);
		jDialogs.add(mortgageDialog);
		jDialogs.add(aboutDialog);
		jDialogs.add(forfeitDialog);
		
		improvementIconsNorth.add(new javax.swing.ImageIcon(getClass().getResource("/hotel-label-north.png")));
		improvementIconsNorth.add(new javax.swing.ImageIcon(getClass().getResource("/house-label-1-north.png")));
		improvementIconsNorth.add(new javax.swing.ImageIcon(getClass().getResource("/house-label-2-north.png")));
		improvementIconsNorth.add(new javax.swing.ImageIcon(getClass().getResource("/house-label-3-north.png")));
		improvementIconsNorth.add(new javax.swing.ImageIcon(getClass().getResource("/house-label-4-north.png")));

		improvementIconsEast.add(new javax.swing.ImageIcon(getClass().getResource("/hotel-label-east.png")));
		improvementIconsEast.add(new javax.swing.ImageIcon(getClass().getResource("/house-label-1-east.png")));
		improvementIconsEast.add(new javax.swing.ImageIcon(getClass().getResource("/house-label-2-east.png")));
		improvementIconsEast.add(new javax.swing.ImageIcon(getClass().getResource("/house-label-3-east.png")));
		improvementIconsEast.add(new javax.swing.ImageIcon(getClass().getResource("/house-label-4-east.png")));
		
		improvementIconsSouth.add(new javax.swing.ImageIcon(getClass().getResource("/hotel-label-south.png")));
		improvementIconsSouth.add(new javax.swing.ImageIcon(getClass().getResource("/house-label-1-south.png")));
		improvementIconsSouth.add(new javax.swing.ImageIcon(getClass().getResource("/house-label-2-south.png")));
		improvementIconsSouth.add(new javax.swing.ImageIcon(getClass().getResource("/house-label-3-south.png")));
		improvementIconsSouth.add(new javax.swing.ImageIcon(getClass().getResource("/house-label-4-south.png")));
		
		improvementIconsWest.add(new javax.swing.ImageIcon(getClass().getResource("/hotel-label-west.png")));
		improvementIconsWest.add(new javax.swing.ImageIcon(getClass().getResource("/house-label-1-west.png")));
		improvementIconsWest.add(new javax.swing.ImageIcon(getClass().getResource("/house-label-2-west.png")));
		improvementIconsWest.add(new javax.swing.ImageIcon(getClass().getResource("/house-label-3-west.png")));
		improvementIconsWest.add(new javax.swing.ImageIcon(getClass().getResource("/house-label-4-west.png")));
		
		labelBoardImageReference.setVisible(false);
		
	}
	
	private void toggleBoardVisibility() {
		if (labelBoardImage.isVisible() == true) {
			labelBoardImage.setVisible(false);
		}
		else {
			labelBoardImage.setVisible(true);
		}
	}

	private void initButtonAppearance() {

		// Set text in all space buttons to blank
		for (JButton b : spaceButtons) {
			b.setText("");
		}
	}

	private void updateDiceView() {
		int die1Value = currentPlayer.getDie1();
		int die2Value = currentPlayer.getDie2();

		labelDie1.setIcon(diceIcons.get(die1Value));
		labelDie2.setIcon(diceIcons.get(die2Value));
	}

	private void updatePromptPropertyDecision() {
		askPropertyDecisionDialog.setVisible(false);

		if (currentPlayer.getRequiredDecisionPropertyAction() == true) {
			if (currentPlayer.getMadeDecisionPropertyAction() == false) {
				customAppearanceJDialog(askPropertyDecisionDialog);

				lockRollDice();
				lockEndTurn();

				if (board.spaces.get(currentPlayer.getCurrentPosition()).getSpaceType() == Space.spaceTypeKeys.property) {
					Property localProperty = (Property) board.spaces.get(currentPlayer.getCurrentPosition());

					labelPropertyName.setText(localProperty.getFriendlyName());
					labelPropertyName.setIcon(new javax.swing.ImageIcon(getClass().getResource("/properties.png")));
					labelCost.setText("$" + localProperty.getPurchaseCost());
					labelCost.setIcon(new javax.swing.ImageIcon(getClass().getResource("/money.png")));
				}

				customAppearanceJDialog(askPropertyDecisionDialog);
				askPropertyDecisionDialog.setVisible(true);
			}
		}
	}

	private void updatePromptPostBailDecision() {
		jailDialog.setVisible(false);
		jailDialog.pack();

		if (currentPlayer.getInitialJailTurn() == false) {
			if (currentPlayer.getIsJailed() == true) {
				customAppearanceJDialog(jailDialog);

				buttonJailDialogPostBail.setEnabled(true);
				buttonJailDialogRollForDoubles.setEnabled(true);

				if (currentPlayer.getGetOutOfJailFreeCardCount() > 0) {
					buttonJailDialogUseGOOJFC.setEnabled(true);
				}
				else {
					buttonJailDialogUseGOOJFC.setEnabled(false);
				}

				int consecutiveJailedTurns = currentPlayer.getConsecutiveTurnsJailed();

				// Use (turn/turns) depending on grammatical context
				if (consecutiveJailedTurns == 1) {
					labelConsecutiveJailedTurns.setText("You have been jailed for 1 turn.");
				}
				else {
					labelConsecutiveJailedTurns.setText("You have been jailed for " + consecutiveJailedTurns + " turns.");
				}

				if (consecutiveJailedTurns >= 3) {
					buttonJailDialogRollForDoubles.setEnabled(false);
				}

				lockRollDice();
				lockEndTurn();

				customAppearanceJDialog(jailDialog);
				jailDialog.setVisible(true);
			}
		}
	}

	private void updateGameLog() {
		String combinedGameLog = "";
		
		for (String s : controller.getGameLogContents()) {
			combinedGameLog = combinedGameLog.concat(s);
		}
		textAreaGameLog.setText(combinedGameLog);
	}

	private void readyUIForNextPlayer() {
		for (int i = 0; i < 40; i++) {
			spaceButtonAppearanceReset(i);
		}
	}

	private void updateCustomSpaceAppearances() {
		Property localProperty = (Property) board.spaces.get(12);

		if (localProperty.getIsMortgaged() == true) {
			buttonSpace12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/electric-company-mortgaged.png")));
		}
		else {
			buttonSpace12.setIcon(null);
		}
	}
	
	private void updateImprovementIcons() {
		Color localColor;
		int houseCount;
		int hotelCount;
		ArrayList<Icon> localIconSet;
		int localID;
		
		for (Space s : board.spaces) {
			localID = s.getID();
			
			if (localID > 0 && localID < 10) {
				localIconSet = improvementIconsSouth;
			}
			else if (localID > 10 && localID < 20) {
				localIconSet = improvementIconsWest;
			}
			else if (localID > 20 && localID < 30) {
				localIconSet = improvementIconsNorth;
			}
			else if (localID > 30 && localID < 40) {
				localIconSet = improvementIconsEast;
			}
			else {
				localIconSet = null;
			}
			
			if (s instanceof Color) {
				localColor = (Color) s;
				JButton localJButton = spaceButtons.get(localColor.getID());
				
				houseCount = localColor.getHouseCount();
				hotelCount = localColor.getHotelCount();
				
				if ((houseCount == 0) && (hotelCount == 0)) {
					localJButton.setIcon(null);
				}
				else if (hotelCount == 1) {
					localJButton.setIcon(localIconSet.get(0));
				}
				else { 
					localJButton.setIcon(localIconSet.get(houseCount));
				}
			}
		}
	}
	
	// </editor-fold>

	// <editor-fold desc="Button locking and unlocking">
	private void unlockRollDice() {
		buttonRollDice.setEnabled(true);
		appendToDebugLog("diceRoll unlocked.");
	}
	
	private void lockRollDice() {
		buttonRollDice.setEnabled(false);
		appendToDebugLog("diceRoll locked.");
	}
	
	private void unlockEndTurn() {
		buttonEndTurn.setEnabled(true);
		appendToDebugLog("endTurn unlocked.");
	}
	
	private void lockEndTurn() {
		buttonEndTurn.setEnabled(false);
		appendToDebugLog("endTurn locked.");
	}
	// </editor-fold>

	// <editor-fold desc="File menu">
    private void menuFileQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileQuitActionPerformed
		System.exit(0);
    }//GEN-LAST:event_menuFileQuitActionPerformed

    private void menuFileNewGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileNewGameActionPerformed
		customAppearanceJDialog(gameSetupDialog);
		gameSetupDialog.setVisible(true);
		appendToDebugLog("New game dialog opened.");
    }//GEN-LAST:event_menuFileNewGameActionPerformed

    private void menuFileLoadGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileLoadGameActionPerformed
		int openGameReturn = openFileChooser.showOpenDialog(openFileChooserPanel);
		if (openGameReturn == JFileChooser.APPROVE_OPTION) {
			File gameStateInputFile = openFileChooser.getSelectedFile();
			try {
				openGameState(gameStateInputFile);
			} catch (IOException ex) {
				Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
			} catch (ClassNotFoundException ex) {
				Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
			}
		}
    }//GEN-LAST:event_menuFileLoadGameActionPerformed

    private void menuFileSaveGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileSaveGameActionPerformed
		int saveGameReturn = saveFileChooser.showSaveDialog(saveFileChoserPanel);
		if (saveGameReturn == JFileChooser.APPROVE_OPTION) {
			File gameStateOutputFile = saveFileChooser.getSelectedFile();
			try {
				saveGameState(gameStateOutputFile);
			} catch (IOException ex) {
				Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
			}
		}
    }//GEN-LAST:event_menuFileSaveGameActionPerformed
	
	private void saveGameState(File saveOutputFile) throws IOException {
		System.out.println(saveOutputFile);
		
		FileOutputStream f = new FileOutputStream("game.jmsg");
		ObjectOutput s = new ObjectOutputStream(f);
		s.writeObject(board);
		s.writeObject(controller);
		s.flush();
	}

	private void openGameState(File saveInputFile) throws IOException, ClassNotFoundException {
		System.out.println(saveInputFile);
		
		FileInputStream in = new FileInputStream("game.jmsg");
		ObjectInputStream s = new ObjectInputStream(in);
		board = (Board) s.readObject();
		controller = (GameLogicController) s.readObject();
	}
	
	// </editor-fold>

	// <editor-fold desc="buttonSpace<N>ActionPerformed">
    private void buttonSpace0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace0ActionPerformed
		updateSpaceSelection(0);
    }//GEN-LAST:event_buttonSpace0ActionPerformed

    private void buttonSpace1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace1ActionPerformed
		updateSpaceSelection(1);
    }//GEN-LAST:event_buttonSpace1ActionPerformed

    private void buttonSpace2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace2ActionPerformed
		updateSpaceSelection(2);    // TODO add your handling code here:
    }//GEN-LAST:event_buttonSpace2ActionPerformed

    private void buttonSpace3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace3ActionPerformed
		updateSpaceSelection(3);
    }//GEN-LAST:event_buttonSpace3ActionPerformed

    private void buttonSpace4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace4ActionPerformed
		updateSpaceSelection(4);
    }//GEN-LAST:event_buttonSpace4ActionPerformed

    private void buttonSpace5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace5ActionPerformed
		updateSpaceSelection(5);
    }//GEN-LAST:event_buttonSpace5ActionPerformed

    private void buttonSpace6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace6ActionPerformed
		updateSpaceSelection(6);
    }//GEN-LAST:event_buttonSpace6ActionPerformed

    private void buttonSpace7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace7ActionPerformed
		updateSpaceSelection(7);
        }//GEN-LAST:event_buttonSpace7ActionPerformed
    private void buttonSpace8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace8ActionPerformed
		updateSpaceSelection(8);
    }//GEN-LAST:event_buttonSpace8ActionPerformed

    private void buttonSpace9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace9ActionPerformed
		updateSpaceSelection(9);
    }//GEN-LAST:event_buttonSpace9ActionPerformed

    private void buttonSpace10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace10ActionPerformed
		updateSpaceSelection(10);
    }//GEN-LAST:event_buttonSpace10ActionPerformed

    private void buttonSpace11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace11ActionPerformed
		updateSpaceSelection(11);
    }//GEN-LAST:event_buttonSpace11ActionPerformed

    private void buttonSpace12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace12ActionPerformed
		updateSpaceSelection(12);
    }//GEN-LAST:event_buttonSpace12ActionPerformed

    private void buttonSpace13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace13ActionPerformed
		updateSpaceSelection(13);
    }//GEN-LAST:event_buttonSpace13ActionPerformed

    private void buttonSpace14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace14ActionPerformed
		updateSpaceSelection(14);
    }//GEN-LAST:event_buttonSpace14ActionPerformed

    private void buttonSpace15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace15ActionPerformed
		updateSpaceSelection(15);
    }//GEN-LAST:event_buttonSpace15ActionPerformed

    private void buttonSpace16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace16ActionPerformed
		updateSpaceSelection(16);
    }//GEN-LAST:event_buttonSpace16ActionPerformed

    private void buttonSpace17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace17ActionPerformed
		updateSpaceSelection(17);
    }//GEN-LAST:event_buttonSpace17ActionPerformed

    private void buttonSpace18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace18ActionPerformed
		updateSpaceSelection(18);
    }//GEN-LAST:event_buttonSpace18ActionPerformed

    private void buttonSpace19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace19ActionPerformed
		updateSpaceSelection(19);
    }//GEN-LAST:event_buttonSpace19ActionPerformed

    private void buttonSpace20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace20ActionPerformed
		updateSpaceSelection(20);
    }//GEN-LAST:event_buttonSpace20ActionPerformed

    private void buttonSpace21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace21ActionPerformed
		updateSpaceSelection(21);
    }//GEN-LAST:event_buttonSpace21ActionPerformed

    private void buttonSpace22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace22ActionPerformed
		updateSpaceSelection(22);
    }//GEN-LAST:event_buttonSpace22ActionPerformed

    private void buttonSpace23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace23ActionPerformed
		updateSpaceSelection(23);
    }//GEN-LAST:event_buttonSpace23ActionPerformed

    private void buttonSpace24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace24ActionPerformed
		updateSpaceSelection(24);
    }//GEN-LAST:event_buttonSpace24ActionPerformed

    private void buttonSpace25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace25ActionPerformed
		updateSpaceSelection(25);
    }//GEN-LAST:event_buttonSpace25ActionPerformed

    private void buttonSpace26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace26ActionPerformed
		updateSpaceSelection(26);
    }//GEN-LAST:event_buttonSpace26ActionPerformed

    private void buttonSpace27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace27ActionPerformed
		updateSpaceSelection(27);
    }//GEN-LAST:event_buttonSpace27ActionPerformed

    private void buttonSpace28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace28ActionPerformed
		updateSpaceSelection(28);
    }//GEN-LAST:event_buttonSpace28ActionPerformed

    private void buttonSpace29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace29ActionPerformed
		updateSpaceSelection(29);
    }//GEN-LAST:event_buttonSpace29ActionPerformed

    private void buttonSpace30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace30ActionPerformed
		updateSpaceSelection(30);
    }//GEN-LAST:event_buttonSpace30ActionPerformed

    private void buttonSpace31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace31ActionPerformed
		updateSpaceSelection(31);
    }//GEN-LAST:event_buttonSpace31ActionPerformed

    private void buttonSpace32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace32ActionPerformed
		updateSpaceSelection(32);
    }//GEN-LAST:event_buttonSpace32ActionPerformed

    private void buttonSpace33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace33ActionPerformed
		updateSpaceSelection(33);
    }//GEN-LAST:event_buttonSpace33ActionPerformed

    private void buttonSpace34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace34ActionPerformed
		updateSpaceSelection(34);
    }//GEN-LAST:event_buttonSpace34ActionPerformed

    private void buttonSpace35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace35ActionPerformed
		updateSpaceSelection(35);
    }//GEN-LAST:event_buttonSpace35ActionPerformed

    private void buttonSpace36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace36ActionPerformed
		updateSpaceSelection(36);
    }//GEN-LAST:event_buttonSpace36ActionPerformed

    private void buttonSpace37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace37ActionPerformed
		updateSpaceSelection(37);
    }//GEN-LAST:event_buttonSpace37ActionPerformed

    private void buttonSpace38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace38ActionPerformed
		updateSpaceSelection(38);
    }//GEN-LAST:event_buttonSpace38ActionPerformed

    private void buttonSpace39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpace39ActionPerformed
		updateSpaceSelection(39);
    }//GEN-LAST:event_buttonSpace39ActionPerformed
	//</editor-fold>

	// <editor-fold desc="Custom Swing helpers">
	private void centerJDialog(JDialog inputDialog) {
		
		int referenceX = frameBoard.getLocationOnScreen().x;
		int referenceY = frameBoard.getLocationOnScreen().y;
		int referenceWidth = frameBoard.getWidth();
		int referenceHeight = frameBoard.getHeight();
		
		int innerWidth = inputDialog.getWidth();
		int innerHeight = inputDialog.getHeight();
		
		int targetX = (int) (0.5 * (referenceWidth - innerWidth));
		int targetY = (int) (0.5 * (referenceHeight - innerHeight));
		
		targetX += referenceX;
		targetY += referenceY;
		
		inputDialog.setLocation(targetX, targetY);
	}
	
	private void drawBorderJDialog(JDialog inputDialog) {
		if (inputDialog.equals(gameEditorDialog)) {
			gameEditorDialog.getRootPane().setBorder(BorderFactory.createLineBorder(java.awt.Color.RED));
		}
		else {
			inputDialog.getRootPane().setBorder(BorderFactory.createLineBorder(java.awt.Color.BLACK));
		}
	}
	
	private void customAppearanceJDialog(JDialog inputDialog) {
		centerJDialog(inputDialog);
		drawBorderJDialog(inputDialog);
	}
	// </editor-fold>
	
    private void menuEditGameEditorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditGameEditorActionPerformed
		customAppearanceJDialog(gameEditorDialog);
		
		gameEditorDialog.setVisible(true);
		controller.appendToGameLog("Game Editor was opened!");
		update();
    }//GEN-LAST:event_menuEditGameEditorActionPerformed

	// <editor-fold desc="Sound helpers">
	// </editor-fold>
	
	// <editor-fold desc="End turn/roll dice buttons">
    private void buttonRollDiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRollDiceActionPerformed
		
		controller.diceRollManager();
		update();
    }//GEN-LAST:event_buttonRollDiceActionPerformed

    private void buttonEndTurnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEndTurnActionPerformed
		controller.endTurnManager();
		update();
//		readyUIForNextPlayer();
    }//GEN-LAST:event_buttonEndTurnActionPerformed
	// </editor-fold>

	// <editor-fold desc="User prompts">
	public void promptUserForPropertyDecision() {
		customAppearanceJDialog(askPropertyDecisionDialog);
		askPropertyDecisionDialog.setVisible(true);
	}
	// </editor-fold>

	// <editor-fold desc="Statistics pane">
	private void updateStatsPane() {
		
	}
	// </editor-fold>
	
    private void buttonSpace20MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSpace20MouseEntered
		buttonSpace20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/free-parking-anim.gif")));
    }//GEN-LAST:event_buttonSpace20MouseEntered

    private void menuViewCheckBoxShowDebugLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuViewCheckBoxShowDebugLogActionPerformed
		if (menuViewCheckBoxShowDebugLog.getState() == true) {
			debugLogFrame.setVisible(true);
		}
		else {
			debugLogFrame.setVisible(false);
		}
    }//GEN-LAST:event_menuViewCheckBoxShowDebugLogActionPerformed
	// </editor-fold>
	
    private void menuEditDebugToolsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditDebugToolsActionPerformed
		customAppearanceJDialog(debugToolsDialog);
		debugToolsDialog.setVisible(true);
    }//GEN-LAST:event_menuEditDebugToolsActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
		for (int i = 0; i < 10; i++) {
			spaceButtonAppearanceHighlight(i);
		}
    }//GEN-LAST:event_jButton2ActionPerformed

    private void buttonPropertyDecisionPurchaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPropertyDecisionPurchaseActionPerformed
		controller.playerDecisionPurchaseProperty();
		update();
    }//GEN-LAST:event_buttonPropertyDecisionPurchaseActionPerformed

    private void menuViewManuallyUpdateViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuViewManuallyUpdateViewActionPerformed
		update();
    }//GEN-LAST:event_menuViewManuallyUpdateViewActionPerformed

    private void checkBoxPlayer3ComputerControlledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxPlayer3ComputerControlledActionPerformed
		// TODO add your handling code here:
    }//GEN-LAST:event_checkBoxPlayer3ComputerControlledActionPerformed

    private void checkBoxPlayer1ComputerControlledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxPlayer1ComputerControlledActionPerformed
		if (checkBoxPlayer1ComputerControlled.isSelected() == true) {
			board.players.get(1).setIsComputerControlled(true);
		}
		else {
			board.players.get(1).setIsComputerControlled(false);
		}
    }//GEN-LAST:event_checkBoxPlayer1ComputerControlledActionPerformed

    private void checkBoxPlayer2ComputerControlledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxPlayer2ComputerControlledActionPerformed
		if (checkBoxPlayer2ComputerControlled.isSelected() == true) {
			board.players.get(2).setIsComputerControlled(true);
		}
		else {
			board.players.get(2).setIsComputerControlled(false);
		}
    }//GEN-LAST:event_checkBoxPlayer2ComputerControlledActionPerformed
	
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		appendToDebugLog("Debug test button pressed.");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void textFieldPlayer1NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldPlayer1NameActionPerformed
		// TODO add your handling code here:
    }//GEN-LAST:event_textFieldPlayer1NameActionPerformed

    private void spinnerStartingBalancePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_spinnerStartingBalancePropertyChange
		int inputStartingBalance = (int) spinnerStartingBalance.getValue();
    }//GEN-LAST:event_spinnerStartingBalancePropertyChange

    private void comboBoxPlayersCountPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_comboBoxPlayersCountPropertyChange

    }//GEN-LAST:event_comboBoxPlayersCountPropertyChange

    private void comboBoxPlayersCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxPlayersCountActionPerformed
		String inputPlayersCount = comboBoxPlayersCount.getSelectedItem().toString();
		if (inputPlayersCount.equals("1")) {
			textFieldPlayer1Name.setEnabled(true);
			textFieldPlayer2Name.setEnabled(false);
			textFieldPlayer3Name.setEnabled(false);
			textFieldPlayer4Name.setEnabled(false);
		}
		else if (inputPlayersCount.equals("2")) {
			textFieldPlayer1Name.setEnabled(true);
			textFieldPlayer2Name.setEnabled(true);
			textFieldPlayer3Name.setEnabled(false);
			textFieldPlayer4Name.setEnabled(false);
		}
		else if (inputPlayersCount.equals("3")) {
			textFieldPlayer1Name.setEnabled(true);
			textFieldPlayer2Name.setEnabled(true);
			textFieldPlayer3Name.setEnabled(true);
			textFieldPlayer4Name.setEnabled(false);
		}
		else if (inputPlayersCount.equals("4")) {
			textFieldPlayer1Name.setEnabled(true);
			textFieldPlayer2Name.setEnabled(true);
			textFieldPlayer3Name.setEnabled(true);
			textFieldPlayer4Name.setEnabled(true);
		}
    }//GEN-LAST:event_comboBoxPlayersCountActionPerformed

    private void buttonStartGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStartGameActionPerformed
		controller.setIsGameActive(true);
		String inputPlayersCount = comboBoxPlayersCount.getSelectedItem().toString();
		
		int localPlayersCount = Integer.parseInt(inputPlayersCount);
		controller.setPlayersCount(localPlayersCount);
		
		if (localPlayersCount == 1) {
			iconPlayer2Position.setVisible(false);
			iconPlayer3Position.setVisible(false);
			iconPlayer4Position.setVisible(false);
		}
		else if (localPlayersCount == 2) {
			iconPlayer3Position.setVisible(false);
			iconPlayer4Position.setVisible(false);
		}
		else if (localPlayersCount == 3) {
			iconPlayer4Position.setVisible(false);
		}
		
		gameSetupDialog.setVisible(false);
		
		board.players.get(1).setCustomName(textFieldPlayer1Name.getText());
		board.players.get(2).setCustomName(textFieldPlayer2Name.getText());
		board.players.get(3).setCustomName(textFieldPlayer3Name.getText());
		board.players.get(4).setCustomName(textFieldPlayer4Name.getText());
		
		controller.sendInitGameMessage();
		
		controller.initialEvaluator();
		update();
    }//GEN-LAST:event_buttonStartGameActionPerformed

    private void menuHelpAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuHelpAboutActionPerformed
		customAppearanceJDialog(aboutDialog);
		aboutDialog.setLocation(frameBoard.getLocationOnScreen().x, frameBoard.getLocationOnScreen().y);
		aboutDialog.setVisible(true);
    }//GEN-LAST:event_menuHelpAboutActionPerformed

    private void menuViewToggleExtraPaddingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuViewToggleExtraPaddingActionPerformed
		if (menuViewToggleExtraPadding.isEnabled() == true) {
			controller.setExtraTextPadding(true);
		}
		else {
			controller.setExtraTextPadding(false);
		}
    }//GEN-LAST:event_menuViewToggleExtraPaddingActionPerformed

    private void buttonActionImprovementsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActionImprovementsActionPerformed
		customAppearanceJDialog(improvementsDialog);
		updateImprovementsDialog();
		
		labelSelectedProperty.setText("Select a property.");
		labelImprovementInfo.setText("No property selected.");
		
		if (improvementsDialog.isVisible() == false) {
			improvementsDialog.setVisible(true);
			buttonPropertiesActionPerformed(evt);
		}
		else {
			improvementsDialog.setVisible(false);
		}
    }//GEN-LAST:event_buttonActionImprovementsActionPerformed

	private void updateImprovementsDialog() {
		Space localSpace = board.spaces.get(currentSpaceSelectionID);
		Property localProperty;
		Color localColorProperty;
		
		boolean improvementsButtonLockState = true;
		
		controller.setPlayerCanBuildImprovements(false);
		
		labelSelectedProperty.setText("Selected property: " + localSpace.getFriendlyName());
		
		if (localSpace.getSpaceType() != Space.spaceTypeKeys.property) {
			labelImprovementInfo.setText("Selected space is not a property.");
		}
		else {
			localProperty = (Property) localSpace;
			if (localProperty.getPropertyType() != Property.propertyTypeKeys.color) {
				labelImprovementInfo.setText("Selected space is not a color property.");
			}
			else {
				localColorProperty = (Color) localProperty;
				if (localColorProperty.getIsOwned() == false) {
					labelImprovementInfo.setText("Selected color property is not owned.");
				}
				else {
					if (localColorProperty.getOwnerID() != currentPlayer.getPlayerID()) {
						labelImprovementInfo.setText("You do not own this property.");
					}
					else {
						if (localColorProperty.getIsFullSetOwned() == false) {
							labelImprovementInfo.setText("You do not own all properties within this color set.");
						}
						else {
							labelImprovementInfo.setText("You may construct improvements on this property.");
							controller.setPlayerCanBuildImprovements(true);
							improvementsButtonLockState = false;
						}
					}
				}
			}
		}
		
		if (improvementsButtonLockState == true) {
			buttonBuildHotel.setEnabled(false);
			buttonBuildHouse.setEnabled(false);
			buttonSellHouse.setEnabled(false);
			buttonSellHotel.setEnabled(false);
		}
		else {
			buttonBuildHotel.setEnabled(true);
			buttonBuildHouse.setEnabled(true);
			buttonSellHouse.setEnabled(true);
			buttonSellHotel.setEnabled(true);
		}
	}
	
    private void buttonPropertiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPropertiesActionPerformed
		boolean localOwnedPropertyIDs[] = currentPlayer.getOwnedPropertyIDs();
		
		for (int i = 0; i < 40; i++) {
			if (localOwnedPropertyIDs[i] == true) {
				spaceButtonAppearanceHighlight(i);
			}
			else {
				spaceButtonAppearanceReset(i);
			}
		}
    }//GEN-LAST:event_buttonPropertiesActionPerformed

    private void buttonJailDialogPostBailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonJailDialogPostBailActionPerformed
		controller.playerDecisionJailPostBail();
		update();
    }//GEN-LAST:event_buttonJailDialogPostBailActionPerformed

    private void buttonJailDialogRollForDoublesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonJailDialogRollForDoublesActionPerformed
		controller.playerDecisionJailRollDoubles();
		update();
    }//GEN-LAST:event_buttonJailDialogRollForDoublesActionPerformed

    private void buttonForfeitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonForfeitActionPerformed
		customAppearanceJDialog(forfeitDialog);
		
		forfeitDialog.setVisible(true);
		controller.forfeitManager();
		update();
    }//GEN-LAST:event_buttonForfeitActionPerformed

    private void buttonIcon8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonIcon8ActionPerformed
		setPlayerIcon(iconSelectionPlayerID, buttonIcon8.getIcon());
    }//GEN-LAST:event_buttonIcon8ActionPerformed
	
	private void setPlayerIcon(int playerID, Icon inputIcon) {
		
		JLabel localPlayerIcon = new JLabel();
		
		if (playerID == 1) {
			localPlayerIcon = iconPlayer1Position;
			buttonPlayer1Icon.setIcon(inputIcon);
		}
		else if (playerID == 2) {
			localPlayerIcon = iconPlayer2Position;
			buttonPlayer2Icon.setIcon(inputIcon);
		}
		else if (playerID == 3) {
			localPlayerIcon = iconPlayer3Position;
			buttonPlayer3Icon.setIcon(inputIcon);
		}
		else if (playerID == 4) {
			localPlayerIcon = iconPlayer4Position;
			buttonPlayer4Icon.setIcon(inputIcon);
		}
		
		localPlayerIcon.setIcon(inputIcon);
		
		playerIconSelector.setVisible(false);
	}
	
    private void buttonIcon1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonIcon1ActionPerformed
		setPlayerIcon(iconSelectionPlayerID, buttonIcon1.getIcon());
    }//GEN-LAST:event_buttonIcon1ActionPerformed

    private void buttonIcon4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonIcon4ActionPerformed
		setPlayerIcon(iconSelectionPlayerID, buttonIcon4.getIcon());
    }//GEN-LAST:event_buttonIcon4ActionPerformed

    private void buttonIcon2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonIcon2ActionPerformed
		setPlayerIcon(iconSelectionPlayerID, buttonIcon2.getIcon());
    }//GEN-LAST:event_buttonIcon2ActionPerformed

    private void checkBoxPlayer4ComputerControlledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxPlayer4ComputerControlledActionPerformed

    }//GEN-LAST:event_checkBoxPlayer4ComputerControlledActionPerformed

    private void buttonPlayer1IconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPlayer1IconActionPerformed
		iconSelectionPlayerID = 1;
		buttonIcon5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player-icon-1-px.png")));
		playerIconSelector.setVisible(true);
    }//GEN-LAST:event_buttonPlayer1IconActionPerformed

    private void buttonPlayer2IconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPlayer2IconActionPerformed
		iconSelectionPlayerID = 2;
		buttonIcon5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/player-icon-2-px.png")));
		playerIconSelector.setVisible(true);
		playerIconSelector.setLocation(buttonPlayer2Icon.getLocation());
		
    }//GEN-LAST:event_buttonPlayer2IconActionPerformed

    private void buttonIcon3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonIcon3ActionPerformed
		setPlayerIcon(iconSelectionPlayerID, buttonIcon3.getIcon());
    }//GEN-LAST:event_buttonIcon3ActionPerformed

    private void buttonIcon5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonIcon5ActionPerformed
		setPlayerIcon(iconSelectionPlayerID, buttonIcon5.getIcon());
    }//GEN-LAST:event_buttonIcon5ActionPerformed

    private void buttonIcon6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonIcon6ActionPerformed
		setPlayerIcon(iconSelectionPlayerID, buttonIcon6.getIcon());
    }//GEN-LAST:event_buttonIcon6ActionPerformed

    private void buttonIcon7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonIcon7ActionPerformed
		setPlayerIcon(iconSelectionPlayerID, buttonIcon7.getIcon());
    }//GEN-LAST:event_buttonIcon7ActionPerformed
	
    private void buttonIcon9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonIcon9ActionPerformed
		setPlayerIcon(iconSelectionPlayerID, buttonIcon9.getIcon());
    }//GEN-LAST:event_buttonIcon9ActionPerformed

    private void buttonActionMortgageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActionMortgageActionPerformed
		if (mortgageDialog.isVisible() == false) {
			mortgageDialog.setVisible(true);
		}
		else {
			mortgageDialog.setVisible(false);
		}
    }//GEN-LAST:event_buttonActionMortgageActionPerformed

    private void buttonJailDialogUseGOOJFCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonJailDialogUseGOOJFCActionPerformed
		// TODO add your handling code here:
    }//GEN-LAST:event_buttonJailDialogUseGOOJFCActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
		aboutDialog.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void buttonJailPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonJailPlayerActionPerformed
		gameEditorPlayer.setIsJailed(true);
		gameEditorPlayer.setInitialJailTurn(true);
		controller.appendToGameLog("[Game Editor]: Jailed " + gameEditorPlayer.getCustomName() + ".");
		update();
    }//GEN-LAST:event_buttonJailPlayerActionPerformed

    private void buttonReleasePlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonReleasePlayerActionPerformed
		gameEditorPlayer.setIsJailed(false);
		gameEditorPlayer.setInitialJailTurn(false);
		controller.appendToGameLog("[Game Editor]: Released " + gameEditorPlayer.getCustomName() + " from jail.");
		update();
    }//GEN-LAST:event_buttonReleasePlayerActionPerformed

    private void buttonDeduct1000ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeduct1000ActionPerformed
		gameEditorPlayer.updateCurrentBalance(-1000);
		controller.appendToGameLog("[Game Editor]: Gave " + gameEditorPlayer.getCustomName() + " $-1000.");
		update();
    }//GEN-LAST:event_buttonDeduct1000ActionPerformed

    private void buttonGive1000ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGive1000ActionPerformed
		gameEditorPlayer.updateCurrentBalance(1000);
		controller.appendToGameLog("[Game Editor]: Gave " + gameEditorPlayer.getCustomName() + " $1000.");
		update();
    }//GEN-LAST:event_buttonGive1000ActionPerformed

    private void buttonGameEditorAdvanceSpaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGameEditorAdvanceSpaceActionPerformed
		Player currentPlayer = board.players.get(1);
		currentPlayer.advancePosition(1);
		//updateVisualPlayerIndicator(currentPlayer);
		update();
    }//GEN-LAST:event_buttonGameEditorAdvanceSpaceActionPerformed

    private void buttonGameEditorUnlockRollDice1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGameEditorUnlockRollDice1ActionPerformed
		appendToDebugLog("[Game Editor] Calling unlockDiceRoll");
		unlockRollDice();
		update();
    }//GEN-LAST:event_buttonGameEditorUnlockRollDice1ActionPerformed

    private void buttonGameEditorUnlockEndTurnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGameEditorUnlockEndTurnActionPerformed
		appendToDebugLog("[Game Editor] Calling unlockNextTurn");
		unlockEndTurn();
		update();
    }//GEN-LAST:event_buttonGameEditorUnlockEndTurnActionPerformed

	// <editor-fold desc="Game editor">
    private void buttonGameEditorGoBackSpaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGameEditorGoBackSpaceActionPerformed
		Player currentPlayer = board.players.get(1);
		currentPlayer.advancePosition(-1);
		//updateVisualPlayerIndicator(currentPlayer);
		update();
    }//GEN-LAST:event_buttonGameEditorGoBackSpaceActionPerformed

    private void buttonGameEditorCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGameEditorCloseActionPerformed
		gameEditorDialog.setVisible(false);
    }//GEN-LAST:event_buttonGameEditorCloseActionPerformed

    private void buttonGameEditorUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGameEditorUpdateActionPerformed
		controller.initialEvaluator();
		update();
    }//GEN-LAST:event_buttonGameEditorUpdateActionPerformed

    private void comboBoxPlayerSelectionPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_comboBoxPlayerSelectionPropertyChange

    }//GEN-LAST:event_comboBoxPlayerSelectionPropertyChange

    private void comboBoxPlayerSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxPlayerSelectionActionPerformed
		gameEditorPlayer = board.players.get(1 + comboBoxPlayerSelection.getSelectedIndex());
    }//GEN-LAST:event_comboBoxPlayerSelectionActionPerformed

    private void buttonSpace12MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSpace12MouseEntered
        buttonSpace12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/electric-company-anim.gif")));
    }//GEN-LAST:event_buttonSpace12MouseEntered

    private void buttonSpace12MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSpace12MouseExited
        buttonSpace12.setIcon(null);
    }//GEN-LAST:event_buttonSpace12MouseExited

    private void buttonSpace28MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSpace28MouseEntered
		buttonSpace28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/waterworks-anim.gif")));
    }//GEN-LAST:event_buttonSpace28MouseEntered

    private void buttonSpace28MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSpace28MouseExited
        buttonSpace28.setIcon(null);
    }//GEN-LAST:event_buttonSpace28MouseExited

    private void buttonSpace38MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSpace38MouseEntered
		buttonSpace38.setIcon(new javax.swing.ImageIcon(getClass().getResource("/luxury-tax-anim.gif")));
    }//GEN-LAST:event_buttonSpace38MouseEntered

    private void buttonSpace38MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSpace38MouseExited
        buttonSpace38.setIcon(null);
    }//GEN-LAST:event_buttonSpace38MouseExited

    private void formComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentMoved
        
		for (JDialog d : jDialogs) {
			customAppearanceJDialog(d);
			d.requestFocus();
		}
		
    }//GEN-LAST:event_formComponentMoved

    private void buttonSpace20MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSpace20MouseExited
        buttonSpace20.setIcon(null);
    }//GEN-LAST:event_buttonSpace20MouseExited

    private void buttonPropertyDecisionAuctionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPropertyDecisionAuctionActionPerformed
        appendToGameLog("Auctions are not yet implemented.");
    }//GEN-LAST:event_buttonPropertyDecisionAuctionActionPerformed

    private void forfeitDialogButtonNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forfeitDialogButtonNoActionPerformed
        forfeitDialog.setVisible(false);
    }//GEN-LAST:event_forfeitDialogButtonNoActionPerformed

    private void buttonGameEditorGiveAllPropertiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGameEditorGiveAllPropertiesActionPerformed
        controller.debugToolsGiveAllProperties(gameEditorPlayer.getPlayerID());
		update();
    }//GEN-LAST:event_buttonGameEditorGiveAllPropertiesActionPerformed

    private void buttonBuildHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuildHouseActionPerformed
        controller.improvementsManager(currentSpaceSelectionID, GameLogicController.ImprovementsActions.buildHouse);
		update();
    }//GEN-LAST:event_buttonBuildHouseActionPerformed

    private void buttonSellHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSellHouseActionPerformed
        controller.improvementsManager(currentSpaceSelectionID, GameLogicController.ImprovementsActions.sellHouse);
		update();
    }//GEN-LAST:event_buttonSellHouseActionPerformed

    private void buttonBuildHotelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuildHotelActionPerformed
        controller.improvementsManager(currentSpaceSelectionID, GameLogicController.ImprovementsActions.buildHotel);
		update();
    }//GEN-LAST:event_buttonBuildHotelActionPerformed

    private void buttonSellHotelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSellHotelActionPerformed
        controller.improvementsManager(currentSpaceSelectionID, GameLogicController.ImprovementsActions.sellHotel);
		update();
    }//GEN-LAST:event_buttonSellHotelActionPerformed

    private void buttonActionTradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActionTradeActionPerformed
        toggleBoardVisibility();
    }//GEN-LAST:event_buttonActionTradeActionPerformed

    private void formattedTextFieldGameLogSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formattedTextFieldGameLogSearchActionPerformed
        updateGameLogWithSearchQuery(formattedTextFieldGameLogSearch.getText());
    }//GEN-LAST:event_formattedTextFieldGameLogSearchActionPerformed
	// </editor-fold>
	
	private void updateGameLogWithSearchQuery(String inputQuery) {
		gameLogContentsFiltered = controller.getGameLogContentsFiltered(inputQuery);
		String combinedGameLog = "";
		
		for (String s : gameLogContentsFiltered) {
			combinedGameLog = combinedGameLog.concat(s);
		}
		
		textAreaGameLog.setText(combinedGameLog);
	}

	public void spaceButtonAppearanceHighlight(int spaceID) {
		// Check if horizontally or vertically oriented on board
		if ((spaceID > 0 && spaceID < 10) || (spaceID > 20 && spaceID < 30)) {
			// Vertical sprite
			spaceButtons.get(spaceID).setIcon(new javax.swing.ImageIcon(getClass().getResource("/space-highlight-80x120-anim.gif")));
		}
		else {
			// Horizontal sprite
			spaceButtons.get(spaceID).setIcon(new javax.swing.ImageIcon(getClass().getResource("/space-highlight-120x80.png")));
		}
	}
	
	public void spaceButtonAppearanceReset(int spaceID) {
		spaceButtons.get(spaceID).setIcon(null);
	}

	// <editor-fold desc="Game logs">
	public String formatButtonText(String inputText) {
		return "<html><body style=\\\"text-align: justify;  text-justify: "
			+ "inter-word;\\\"><center><p>" + inputText + "</p></center></body></html>";
	}
	
	public void appendToGameLog(String input) {
		Date outputTimeStamp;
		outputTimeStamp = new Date();
		String formattedLogEntry = ("[" + outputTimeStamp + "] (" + controller.getTurnCounter()
			+ ") " + input + "\n");
		//logBoxTotalChars += formattedLogEntry.length();
		textAreaGameLog.append(formattedLogEntry);
		//textAreaGameLog.moveCaretPosition(logBoxTotalChars);
	}
	
	public void appendToDebugLog(String input) {
		Date outputTimeStamp;
		outputTimeStamp = new Date();
		String formattedLogEntry = ("[" + outputTimeStamp + "] " + input + "\n");
		//logBoxTotalChars += formattedLogEntry.length();
		textAreaDebugLog.append(formattedLogEntry);
	}
	
	private void updateDebugLogFromController() {
		//textAreaDebugLog.append(controller.getDebugLogContents());
	}
	// </editor-fold>

	// Update contents of selection viewer according to what button was pressed
	public void updateSpaceSelection(int spaceID) {
		appendToDebugLog("Space with ID:" + spaceID + " selected.");
		
		currentSpaceSelectionID = spaceID;
		Space localSpace = board.spaces.get(spaceID);
		
		// Attributes applying to all spaces
		Space.spaceTypeKeys localSpaceType;
		localSpaceType = localSpace.getSpaceType();
		
		int localID = localSpace.getID();
		String localFriendlyName = localSpace.getFriendlyName();
		
		formatLabel(labelSpaceSelectionID, Integer.toString(localID));
		formatLabel(labelFriendlyName, localFriendlyName);
		
		// Correct for grammar: (1 time) or (n times), where n != 1
		String timesLandedSuffix;
		int timesLandedQuantity = localSpace.getTimesLanded();
		
		if (timesLandedQuantity == 1) {
			timesLandedSuffix = " time";
		}
		else {
			timesLandedSuffix = " times";
		}
		formatLabel(labelTimesLanded, Integer.toString(localSpace.getTimesLanded()) + timesLandedSuffix);

		if (localSpace instanceof Property) {
			Property localProperty = (Property) board.spaces.get(spaceID);
			
			boolean localIsOwned = localProperty.getIsOwned();
			formatLabel(labelIsOwned, Boolean.toString(localIsOwned));
			
			formatLabel(labelSpaceType, "Property");
			
			if (localIsOwned == true) {
				formatLabel(labelOwnedBy, board.players.get(localProperty.getOwnerID()).getCustomName());
			}
			else {
				formatLabel(labelOwnedBy, "not owned");
			}
			
			formatLabel(labelPurchaseCost, "$" + Integer.toString(localProperty.getPurchaseCost()));
			
			formatLabel(labelCurrentRent, "$" + Integer.toString(localProperty.calculateRent()));
			
			if (localSpace instanceof Color) {
				Color localColor = (Color) localSpace;
				
				formatLabel(labelSpaceType, "Property, Color");
				appendToDebugLog(localFriendlyName + " house:hotel, " + localColor.getHouseCount() + ":" + localColor.getHotelCount());
			}
			
			else if (localSpace instanceof Utility) {
				Utility localUtility = (Utility) localSpace;
				
				labelSpaceType.setText("Property, Utility");
			}
			
			else if (localSpace instanceof Railroad) {
				Railroad localRailroad = (Railroad) localSpace;
				
				formatLabel(labelSpaceType, "Property, Railroad");
			}
		}

		else if (localSpace instanceof GameEvent) {
			GameEvent localGameEvent = (GameEvent) board.spaces.get(spaceID);
			formatLabel(labelIsOwned);
			formatLabel(labelOwnedBy);
			formatLabel(labelSpaceType, "Game Event");
			formatLabel(labelPurchaseCost);
			formatLabel(labelCurrentRent);
			formatLabel(labelRent1House);
			formatLabel(labelRent2Houses);
			formatLabel(labelRent3Houses);
			formatLabel(labelRent4Houses);
		}
		
		else {
			formatLabel(labelSpaceSelectionID, "undefined ID");
		}
		
		updateImprovementsDialog();
	}
	
	/**
	 * Format a JLabel that contains content.<br>
	 * The text of the label is set to the standard style, and its value is
	 * set to the contents of <code>inputContent</code>.
	 * @param inputLabel The JLabel to modify
	 * @param inputContent The contents of the label message
	 */
	private void formatLabel(JLabel inputLabel, String inputContent) {
		inputLabel.setForeground(java.awt.Color.black);
		inputLabel.setText(inputContent);
	}
	
	/**
	 * Format a JLabel that contains no content.<br>
	 * The text of the label is stylized and set to indicate it has no value.
	 * @param inputLabel The JLabel to modify
	 */
	private void formatLabel(JLabel inputLabel) {
		inputLabel.setForeground(java.awt.Color.gray);
		inputLabel.setText("<html><i>n/a</i></html>");
	}
	
	public void updateVisualPlayerIndicator(Player currentPlayer) {
		int localCurrentPlayerID = currentPlayer.getPlayerID();
		int localDestinationSpaceID = currentPlayer.getCurrentPosition();
		
		int destinationX = 0,
			destinationY = 0;
		
		int playerStandardXOffset = 0,
			playerCornerXOffset = 0;
		
		playerStandardXOffset = 20 * (currentPlayer.getPlayerID() - 1);
		playerCornerXOffset = 30 * (currentPlayer.getPlayerID() - 1);
		
		int yOffset = -2;
		
		if (currentPlayer.getIsJailed() == true) {
			if (localCurrentPlayerID == 1) {
				destinationX = 90;
				destinationY = 850;
			}
			else if (localCurrentPlayerID == 2) {
				destinationX = 110;
				destinationY = 850;
			}
			else if (localCurrentPlayerID == 3) {
				destinationX = 90;
				destinationY = 870;
			}
			else if (localCurrentPlayerID == 4) {
				destinationX = 110;
				destinationY = 870;
			}
		}

		// All "fourths" exclude corner spaces
		// Bottom fourth of board
		else if (localDestinationSpaceID > 0 && localDestinationSpaceID < 10) {
			destinationY = 950 + yOffset;
			destinationX = 850 - (80 * localDestinationSpaceID);
			destinationX += playerStandardXOffset;
			appendToDebugLog("moving to " + destinationX + "," + destinationY);
		}

		// Left fourth of board
		else if (localDestinationSpaceID > 10 && localDestinationSpaceID < 20) {
			destinationX = 10;
			destinationY = 830 + (80 * (11 - localDestinationSpaceID));
			destinationX += playerStandardXOffset;
			appendToDebugLog("moving to " + destinationX + "," + destinationY);
		}

		// Top fourth of board
		else if (localDestinationSpaceID > 20 && localDestinationSpaceID < 30) {
			destinationY = 10 - yOffset;
			destinationX = 130 - (80 * (21 - localDestinationSpaceID));
			destinationX += playerStandardXOffset;
			appendToDebugLog("moving to " + destinationX + "," + destinationY);
		}

		// Right fourth of board
		else if (localDestinationSpaceID > 30 && localDestinationSpaceID < 40) {
			destinationX = 850;
			destinationY = 190 - (80 * (31 - localDestinationSpaceID));
			destinationX += playerStandardXOffset;
			appendToDebugLog("moving to " + destinationX + "," + destinationY);
		}

		// Lower right corner, GO
		else if (localDestinationSpaceID == 0) {
			destinationX = 850 + playerCornerXOffset;
			destinationY = 950 + yOffset;
		}

		// Lower left corner, Jail
		else if (localDestinationSpaceID == 10) {
			destinationX = 10 + playerCornerXOffset;
			destinationY = 950 + yOffset;
		}

		// Upper left corner, Free Parking
		else if (localDestinationSpaceID == 20) {
			destinationX = 10 + playerCornerXOffset;
			destinationY = 110;
		}

		// Upper right corner, Go to Jail
		else if (localDestinationSpaceID == 30) {
			destinationX = 850 + playerCornerXOffset;
			destinationY = 110;
		}

		// To catch undefined condition, use 0 as defaults
		else {
			destinationX = 0;
			destinationY = 0;
			appendToDebugLog("moving to " + destinationX + "," + destinationY);
		}
		if (localCurrentPlayerID == 1) {
			iconPlayer1Position.setLocation(destinationX, destinationY);
		}
		else if (localCurrentPlayerID == 2) {
			iconPlayer2Position.setLocation(destinationX, destinationY);
			
		}
		else if (localCurrentPlayerID == 3) {
			iconPlayer3Position.setLocation(destinationX, destinationY);
			
		}
		else if (localCurrentPlayerID == 4) {
			iconPlayer4Position.setLocation(destinationX, destinationY);
		}
	}

	//<editor-fold desc="Variables declaration (Swing)">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JDialog aboutDialog;
    public javax.swing.JFrame aboutPaneOld;
    public javax.swing.JDialog askPropertyDecisionDialog;
    public javax.swing.JButton buttonActionImprovements;
    public javax.swing.JButton buttonActionImprovements1;
    public javax.swing.JButton buttonActionMortgage;
    public javax.swing.JButton buttonActionTrade;
    public javax.swing.JButton buttonBuildHotel;
    public javax.swing.JButton buttonBuildHouse;
    public javax.swing.JButton buttonDeduct1000;
    public javax.swing.JButton buttonEndTurn;
    public javax.swing.JButton buttonForfeit;
    public javax.swing.JButton buttonGameEditorAdvanceSpace;
    public javax.swing.JButton buttonGameEditorClose;
    public javax.swing.JButton buttonGameEditorGiveAllProperties;
    public javax.swing.JButton buttonGameEditorGoBackSpace;
    public javax.swing.JButton buttonGameEditorUnlockEndTurn;
    public javax.swing.JButton buttonGameEditorUnlockRollDice1;
    public javax.swing.JButton buttonGameEditorUpdate;
    public javax.swing.JButton buttonGive1000;
    public javax.swing.JButton buttonIcon1;
    public javax.swing.JButton buttonIcon2;
    public javax.swing.JButton buttonIcon3;
    public javax.swing.JButton buttonIcon4;
    public javax.swing.JButton buttonIcon5;
    public javax.swing.JButton buttonIcon6;
    public javax.swing.JButton buttonIcon7;
    public javax.swing.JButton buttonIcon8;
    public javax.swing.JButton buttonIcon9;
    public javax.swing.JButton buttonJailDialogPostBail;
    public javax.swing.JButton buttonJailDialogRollForDoubles;
    public javax.swing.JButton buttonJailDialogUseGOOJFC;
    public javax.swing.JButton buttonJailPlayer;
    public javax.swing.JButton buttonPlayer1Icon;
    public javax.swing.JButton buttonPlayer2Icon;
    public javax.swing.JButton buttonPlayer3Icon;
    public javax.swing.JButton buttonPlayer4Icon;
    public javax.swing.JButton buttonProperties;
    public javax.swing.JButton buttonPropertyDecisionAuction;
    public javax.swing.JButton buttonPropertyDecisionPurchase;
    public javax.swing.JButton buttonReleasePlayer;
    public javax.swing.JButton buttonRollDice;
    public javax.swing.JButton buttonSellHotel;
    public javax.swing.JButton buttonSellHouse;
    public javax.swing.JButton buttonSpace0;
    public javax.swing.JButton buttonSpace1;
    public javax.swing.JButton buttonSpace10;
    public javax.swing.JButton buttonSpace11;
    public javax.swing.JButton buttonSpace12;
    public javax.swing.JButton buttonSpace13;
    public javax.swing.JButton buttonSpace14;
    public javax.swing.JButton buttonSpace15;
    public javax.swing.JButton buttonSpace16;
    public javax.swing.JButton buttonSpace17;
    public javax.swing.JButton buttonSpace18;
    public javax.swing.JButton buttonSpace19;
    public javax.swing.JButton buttonSpace2;
    public javax.swing.JButton buttonSpace20;
    public javax.swing.JButton buttonSpace21;
    public javax.swing.JButton buttonSpace22;
    public javax.swing.JButton buttonSpace23;
    public javax.swing.JButton buttonSpace24;
    public javax.swing.JButton buttonSpace25;
    public javax.swing.JButton buttonSpace26;
    public javax.swing.JButton buttonSpace27;
    public javax.swing.JButton buttonSpace28;
    public javax.swing.JButton buttonSpace29;
    public javax.swing.JButton buttonSpace3;
    public javax.swing.JButton buttonSpace30;
    public javax.swing.JButton buttonSpace31;
    public javax.swing.JButton buttonSpace32;
    public javax.swing.JButton buttonSpace33;
    public javax.swing.JButton buttonSpace34;
    public javax.swing.JButton buttonSpace35;
    public javax.swing.JButton buttonSpace36;
    public javax.swing.JButton buttonSpace37;
    public javax.swing.JButton buttonSpace38;
    public javax.swing.JButton buttonSpace39;
    public javax.swing.JButton buttonSpace4;
    public javax.swing.JButton buttonSpace5;
    public javax.swing.JButton buttonSpace6;
    public javax.swing.JButton buttonSpace7;
    public javax.swing.JButton buttonSpace8;
    public javax.swing.JButton buttonSpace9;
    public javax.swing.JButton buttonStartGame;
    public javax.swing.JCheckBox checkBoxPlayer1ComputerControlled;
    public javax.swing.JCheckBox checkBoxPlayer2ComputerControlled;
    public javax.swing.JCheckBox checkBoxPlayer3ComputerControlled;
    public javax.swing.JCheckBox checkBoxPlayer4ComputerControlled;
    public javax.swing.JComboBox<String> comboBoxPlayerSelection;
    public javax.swing.JComboBox<String> comboBoxPlayersCount;
    public javax.swing.JInternalFrame controlPanelActions;
    public javax.swing.JInternalFrame controlPanelGameInformation;
    public javax.swing.JFrame debugLogFrame;
    public javax.swing.JDialog debugToolsDialog;
    public javax.swing.JDialog forfeitDialog;
    public javax.swing.JButton forfeitDialogButtonNo;
    public javax.swing.JButton forfeitDialogButtonYes;
    public javax.swing.JFormattedTextField formattedTextFieldGameLogSearch;
    public javax.swing.JInternalFrame frameBoard;
    public javax.swing.JDialog gameEditorDialog;
    public javax.swing.JDialog gameSetupDialog;
    public javax.swing.JLabel iconPlayer1Position;
    public javax.swing.JLabel iconPlayer2Position;
    public javax.swing.JLabel iconPlayer3Position;
    public javax.swing.JLabel iconPlayer4Position;
    public javax.swing.JDialog improvementsDialog;
    public javax.swing.JButton jButton1;
    public javax.swing.JButton jButton2;
    public javax.swing.JButton jButton3;
    public javax.swing.JButton jButton4;
    public javax.swing.JButton jButton5;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel10;
    public javax.swing.JLabel jLabel11;
    public javax.swing.JLabel jLabel12;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JLabel jLabel6;
    public javax.swing.JLabel jLabel7;
    public javax.swing.JLabel jLabel8;
    public javax.swing.JLabel jLabel9;
    public javax.swing.JMenuBar jMenuBar1;
    public javax.swing.JPopupMenu jPopupMenu1;
    public javax.swing.JProgressBar jProgressBar1;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JSeparator jSeparator1;
    public javax.swing.JSeparator jSeparator2;
    public javax.swing.JSeparator jSeparator3;
    public javax.swing.JSeparator jSeparator4;
    public javax.swing.JSeparator jSeparator5;
    public javax.swing.JSeparator jSeparator6;
    public javax.swing.JSeparator jSeparator7;
    public javax.swing.JSeparator jSeparator8;
    public javax.swing.JSeparator jSeparator9;
    public javax.swing.JDialog jailDialog;
    public javax.swing.JLabel labelBoardImageReference;
    public javax.swing.JLabel labelConsecutiveJailedTurns;
    public javax.swing.JLabel labelConsecutiveJailedTurns1;
    public javax.swing.JLabel labelCost;
    public javax.swing.JLabel labelCurrentBalance;
    public javax.swing.JLabel labelCurrentBalanceIcon1;
    public javax.swing.JLabel labelCurrentPlayer;
    public javax.swing.JLabel labelCurrentPlayerIcon;
    public javax.swing.JLabel labelCurrentPosition;
    public javax.swing.JLabel labelCurrentRent;
    public javax.swing.JLabel labelDie1;
    public javax.swing.JLabel labelDie2;
    public javax.swing.JLabel labelFriendlyName;
    public javax.swing.JLabel labelImprovementInfo;
    public javax.swing.JLabel labelIsOwned;
    public javax.swing.JLabel labelOwnedBy;
    public javax.swing.JLabel labelPlayer1ActiveIcon;
    public javax.swing.JLabel labelPlayer1Name;
    public javax.swing.JLabel labelPlayer2Name;
    public javax.swing.JLabel labelPlayer3Name;
    public javax.swing.JLabel labelPlayer4Name;
    public javax.swing.JLabel labelPropertyName;
    public javax.swing.JLabel labelPurchaseCost;
    public javax.swing.JLabel labelRent1House;
    public javax.swing.JLabel labelRent2Houses;
    public javax.swing.JLabel labelRent3Houses;
    public javax.swing.JLabel labelRent4Houses;
    public javax.swing.JLabel labelRentBase;
    public javax.swing.JLabel labelRentHotel1;
    public javax.swing.JLabel labelSelectedProperty;
    public javax.swing.JLabel labelSpaceSelectionID;
    public javax.swing.JLabel labelSpaceType;
    public javax.swing.JLabel labelTimesLanded;
    public javax.swing.JMenu menuEdit;
    public javax.swing.JMenuItem menuEditDebugTools;
    public javax.swing.JMenuItem menuEditGameEditor;
    public javax.swing.JMenu menuFile;
    public javax.swing.JMenuItem menuFileLoadGame;
    public javax.swing.JMenuItem menuFileNewGame;
    public javax.swing.JMenuItem menuFileQuit;
    public javax.swing.JMenuItem menuFileSaveGame;
    public javax.swing.JMenu menuHelp;
    public javax.swing.JMenuItem menuHelpAbout;
    public javax.swing.JMenu menuView;
    public javax.swing.JCheckBoxMenuItem menuViewCheckBoxShowDebugLog;
    public javax.swing.JMenuItem menuViewManuallyUpdateView;
    public javax.swing.JMenuItem menuViewToggleExtraPadding;
    public javax.swing.JDialog mortgageDialog;
    public javax.swing.JFileChooser openFileChooser;
    public javax.swing.JPanel openFileChooserPanel;
    public javax.swing.JDialog playerIconSelector;
    public javax.swing.JFileChooser saveFileChooser;
    public javax.swing.JPanel saveFileChoserPanel;
    public javax.swing.JPanel spaceSelectionInformation;
    public javax.swing.JSpinner spinnerStartingBalance;
    public javax.swing.JLabel staticLabelCurrentBalance;
    public javax.swing.JLabel staticLabelCurrentPlayer;
    public javax.swing.JLabel staticLabelCurrentRent;
    public javax.swing.JLabel staticLabelFriendlyName;
    public javax.swing.JLabel staticLabelID;
    public javax.swing.JLabel staticLabelImprovementsTitle;
    public javax.swing.JLabel staticLabelIsOwned;
    public javax.swing.JLabel staticLabelJailTitle;
    public javax.swing.JLabel staticLabelMortgage;
    public javax.swing.JLabel staticLabelOwnedBy;
    public javax.swing.JLabel staticLabelPlayer1Name;
    public javax.swing.JLabel staticLabelPlayerIcon;
    public javax.swing.JLabel staticLabelPlayerSelection;
    public javax.swing.JLabel staticLabelPlayerSelection1;
    public javax.swing.JLabel staticLabelPlayersCount;
    public javax.swing.JLabel staticLabelPlayersCount1;
    public javax.swing.JLabel staticLabelPlayersCount2;
    public javax.swing.JLabel staticLabelPosition;
    public javax.swing.JLabel staticLabelPositionIcon;
    public javax.swing.JLabel staticLabelPropertyDecision;
    public javax.swing.JLabel staticLabelPurchaseCost;
    public javax.swing.JLabel staticLabelRentBase1;
    public javax.swing.JLabel staticLabelRentBase2;
    public javax.swing.JLabel staticLabelRentBase3;
    public javax.swing.JLabel staticLabelRentBase4;
    public javax.swing.JLabel staticLabelRentBase5;
    public javax.swing.JLabel staticLabelRentBase6;
    public javax.swing.JLabel staticLabelSearchGameLog;
    public javax.swing.JLabel staticLabelSpaceType;
    public javax.swing.JLabel staticLabelTimesLanded;
    public javax.swing.JDialog statisticsDialog;
    public javax.swing.JTable statsTable;
    public javax.swing.JTextArea textAreaDebugLog;
    public javax.swing.JTextArea textAreaGameLog;
    public javax.swing.JTextField textFieldPlayer1Name;
    public javax.swing.JTextField textFieldPlayer2Name;
    public javax.swing.JTextField textFieldPlayer3Name;
    public javax.swing.JTextField textFieldPlayer4Name;
    // End of variables declaration//GEN-END:variables

	@Override
	public void windowOpened(WindowEvent e) {
		throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
	}
	
	@Override
	public void windowClosing(WindowEvent e) {
		throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
	}
	
	@Override
	public void windowClosed(WindowEvent e) {
		throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
	}
	
	@Override
	public void windowIconified(WindowEvent e) {
		throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
	}
	
	@Override
	public void windowDeiconified(WindowEvent e) {
		throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
	}
	
	@Override
	public void windowActivated(WindowEvent e) {
		throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
	}
	
	@Override
	public void windowDeactivated(WindowEvent e) {
		throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
	}
	
	@Override
	public void actionPerformed(ActionEvent e) {
		throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
	}
	//</editor-fold>
}
